{"version":3,"sources":["components/AlertWindow.js","constants.js","context/UserContext.js","components/Auth.js","components/InputComponent/InputField.js","components/InputComponent/SelectField.js","components/Filters.js","components/GraphSnippets/AreaChart.js","components/GraphSnippets/BarChart.js","components/GraphSnippets/PieChart.js","components/GraphSnippets/TableChart.js","components/Graphs.js","components/InsightTabs.js","components/MainContainer.js","assets/twitter-marker.png","components/EditControl.js","components/Map.js","components/NotifySettings.js","components/ScheduleTweet.js","components/ShowDialogIcon.js","components/StreamParams.js","components/TweetList.js","components/WelcomingAnimation.js","components/WordCloud.js","components/Home.js","context/ThemeContext.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","dialog","color","palette","primary","main","submitButton","margin","width","fontWeight","backgroundColor","dark","light","AlertWindow","error","resetErrorBoundary","title","message","Dialog","open","DialogTitle","className","DialogContent","DialogContentText","DialogActions","Button","variant","onClick","UserError","reset","Error","ErrorCatcher","children","useState","undefined","setError","FallbackComponent","onError","err","onReset","BASE_URL","GEO_FILTER","GET_IDS","REQUEST_TOKEN","AUTH","SEND_TWEET","NOTIFICATION","SETTINGS","MAP_ID","WORDCLOUD_ID","FABsDesc","UserContext","React","createContext","UserProvider","provided","authProps","setAuthProps","Provider","value","useUser","useContext","Auth","query","location","useLocation","URLSearchParams","search","useQuery","oauthToken","get","oauthVerifier","history","useHistory","useEffect","a","axios","params","result","data","push","console","requestAccess","Grid","container","justify","Typography","CircularProgress","textField","borderWidth","borderRadius","secondary","InputField","label","fieldName","handler","text","helperText","hasError","others","TextField","name","onChange","InputProps","startAdornment","InputAdornment","position","select","height","marginBottom","SelectField","id","FormControl","InputLabel","Select","labelId","MenuItem","genericInput","button","padding","Filters","list","setFilteredList","filters","setFilters","specificInputFieldProps","shrink","style","onChangeFilter","e","target","useMemo","countryList","reduce","accList","tweet","place","includes","country_code","cityList","type","minDate","InputLabelProps","maxDate","minTime","maxTime","geoloc","country","map","element","index","city","filteredTweets","filter","timestamp","Date","created_at","minTimestamp","maxTimestamp","isGeolocalized","Boolean","coordinates","cityName","countryCode","disabled","Object","values","length","areachart","fill","AreaChart","dataKey","stroke","fillOpacity","barchart","BarChart","strokeDasharray","piechart","PieGraph","colors","fillColor","useMediaQuery","outerRadius","voice","verticalAlign","iconSize","iconType","table","minWidth","marginRight","marginLeft","TableChart","header","sort","prev","next","count","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","statsTemplate","hours","days","subject","geolocalization","retweet","cities","countries","maxHeight","overflowY","scrollbarWidth","Graphs","classes","updatedStats","stats","JSON","parse","stringify","forEach","creationHour","creationDay","Number","isRetweeted","cityToUpdate","find","countryName","countryToUpdate","code","updateStats","getHours","getDay","retweeted_status","PieChart","root","flexGrow","background","paper","display","flexDirection","overflow","tabs","flexShrink","panelsContainer","default","panel","top","left","right","paddingLeft","paddingRight","InsightTabs","focusedTab","setFocused","panels","child","Box","zIndex","cloneElement","Tabs","_","newVal","textColor","Tab","props","tabName","paddingTop","paddingBottom","mainContainer","sideContainer","spacing","settingsIcon","socket","io","transports","path","COORDINATE_RE","MainContainer","launch","useErrorHandler","streamId","setStreamId","tweets","setTweets","tweetsFiltered","setTweetsFiltered","ne","lat","lng","sw","coords","setCoords","track","follow","setParams","fetchSettings","res","settings","locations","split","oldStreamId","b","document","cookie","match","pop","getCookieValue","emit","on","prevTweets","startStream","streamParameters","constraints","post","withCredentials","source","stopStream","delete","headers","Authorization","off","handleAuthentication","window","replace","token","response","onAddRect","useCallback","nelat","nelng","swlat","swlng","alignItems","item","xs","icon","desc","activeStream","onStart","flat","every","test","onStop","onParamChange","iconOnly","handleAuth","tweetsList","setCoordinates","showToolbars","setList","createControlComponent","createInstance","useElement","createElementHook","context","layerContainer","instance","edit","featureGroup","useControl","createControlHook","createLeafComponent","useLeafletContext","elementRef","current","positionRef","useRef","onCreated","onEdit","onDeleted","onDrawCreate","addLayer","layer","addTo","leaflet","Draw","Event","CREATED","DELETED","EDITRESIZE","EDITMOVE","remove","setPosition","DrawRectangleControl","options","Control","draw","polyline","polygon","rectangle","circle","marker","circlemarker","EditOnlyControl","defaultPosition","popup","listSecondary","Map","bboxRect","setBBoxRect","markers","entries","media","extended_entities","normalized","id_str","user","images","bounding_box","bottomLeftCorner","topRightCorner","groups","key","keys","Math","abs","join","Marker","reverse","Icon","iconUrl","markerImg","profile_image_url","media_url","popupAnchor","Point","Popup","List","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","image","tweetIndex","_northEast","_southWest","evt","_bounds","layers","getLayers","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","FeatureGroup","tresholdSlider","NotifySettings","email","setEmail","treshold","setTreshold","confirm","put","event","gutterBottom","Slider","newT","valueLabelDisplay","min","max","status","float","statusText","stopped","running","leftButton","NUMBER_RE","CONFIRM_RE","ScheduleTweet","sent","setSent","setText","timer","setTimer","setHours","check","setCheck","wordcloud","intervalMS","floor","H_TO_MS","selectedComponents","handleCheck","checked","handleSend","Promise","all","html2canvas","getElementById","useCORS","screenshots","canvas","dataUrl","toDataURL","substring","lastIndexOf","msg","autoFocus","input","multiline","fullWidth","FormControlLabel","control","Checkbox","clearInterval","setInterval","fabIcon","childrenContainer","ShowDialogIcon","isOpen","setOpen","Fab","onClose","maxWidth","keepMounted","StreamParams","startIcon","size","Tweet","extended_tweet","profile_image_url_https","full_text","primaryTypographyProps","secondaryTypographyProps","triggerDownload","link","createElement","body","appendChild","download","href","click","removeChild","icons","listContainer","TweetList","imgFiles","file","substr","importJSON","fileEvt","uploadedFile","files","reader","FileReader","onload","dump","toValidate","validateJSON","old","readAsText","downloadImages","zip","JSZip","fetch","blob","generateAsync","URL","createObjectURL","isTweetListEmpty","isImageListEmpty","Tooltip","onChangeHandler","accept","onchange","triggerUpload","encodeURIComponent","logo","justifyContent","logoImg","logoTitle","fontFamily","WelcomingAnimation","containerRef","lottie","loadAnimation","render","loop","autoplay","animationData","ref","slider","marginTop","defaultOptions","enableTooltip","enableOptimizations","deterministic","fontSizes","fontStyle","rotations","transitionDuration","tooltipOptions","getWordTooltip","word","WordCloud","arrayOfWords","setArrayOfWords","numWords","setNumWords","isDarkTheme","useLayoutEffect","compressedData","toCollapse","collapsed","findIndex","collapse","listOfWord","accumulator","startsWith","toLowerCase","getWordList","slice","newValue","marks","callbacks","maxWords","words","memo","Home","IntroAnimation","useSpring","from","opacity","to","delay","config","duration","MainAnimation","setTimeout","clearTimeout","div","DarkTheme","createMuiTheme","typography","overrides","MuiCssBaseline","html","fontSize","LightTheme","ThemeContext","prefersDarkMode","ThemeProvider","CssBaseline","App","exact","component","ReactDOM","StrictMode"],"mappings":"iqhBAMMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,MAAOF,EAAMG,QAAQC,QAAQC,MAG/BC,aAAc,CACZC,OAAQ,GACRC,MAAO,IACPC,WAAY,IACZP,MAAO,QACPQ,gBAAiBV,EAAMG,QAAQC,QAAQC,KACvC,UAAW,CACTK,gBAAiBV,EAAMG,QAAQC,QAAQO,KACvCT,MAAOF,EAAMG,QAAQC,QAAQQ,YAK7BC,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAAwB,EAClBjB,IAAzBQ,EAD2C,EAC3CA,aAAcL,EAD6B,EAC7BA,OACde,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QACf,OACE,eAACC,EAAA,EAAD,CAAQC,MAAM,EAAd,UACE,cAACC,EAAA,EAAD,CAAaC,UAAWpB,EAAxB,SAAiCe,GAAS,UAC1C,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAoBN,MAEtB,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvB,MAAM,UACNwB,QAAQ,YACRL,UAAWf,EACXqB,QAASZ,EAJX,sBAcFa,EAAY,SAACX,EAASY,EAAOb,GACjC,IAAMF,EAAQgB,MAAMb,GAMpB,OAHAH,EAAME,MAAQA,GAAS,QACvBF,EAAMG,QAAUA,GAAW,wBAC3BH,EAAMe,MAAQA,GAJI,aAKVf,GAwBKiB,EApBM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACXC,wBAASC,GADE,mBAC9BpB,EAD8B,KACvBqB,EADuB,KAOrC,OACE,cAAC,gBAAD,CACEC,kBAAmBvB,EACnBwB,QAAS,SAAAC,GAAG,OAAIH,EAASG,IACzBC,QATgB,WAClBzB,EAAMe,QACNM,OAASD,IAIT,SAKGF,K,6ECxEMQ,EAAW,wBAGXC,EAAU,UAAMD,EAAN,kBACVE,EAAO,UAAMF,EAAN,mBACPG,EAAa,UAAMH,EAAN,qBACbI,EAAI,UAAMJ,EAAN,aACJK,EAAU,UAAML,EAAN,kBACVM,EAAY,UAAMN,EAAN,qBACZO,EAAQ,UAAMP,EAAN,iBAERQ,EAAS,MACTC,EAAe,YAEfC,EACJ,8LADIA,EAIJ,wFAJIA,EAMF,0LANEA,EASL,qNCrBFC,EAAcC,IAAMC,gBASbC,EAAe,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EACVC,wBAASC,GADC,mBAEtCqB,EAAW,CAAEC,UAFyB,KAEdC,aAFc,MAG5C,OAAO,cAACN,EAAYO,SAAb,CAAsBC,MAAOJ,EAA7B,SAAwCvB,KAGpC4B,EAAU,WACrB,IAAMD,EAAQE,qBAAWV,GACzB,GAAc,OAAVQ,EACF,MAAM,IAAI7B,MAAM,wCAElB,OAAO6B,GCyBMG,EAlCF,WACX,IAAMC,EANS,WACf,IAAMC,EAAWC,cACjB,OAAO,IAAIC,gBAAgBF,EAASG,QAItBC,GACRC,EAAaN,EAAMO,IAAI,eACvBC,EAAgBR,EAAMO,IAAI,kBAExBb,EAAiBG,IAAjBH,aACFe,EAAUC,cAgBhB,OAdAC,qBAAU,YACW,uCAAG,4BAAAC,EAAA,+EAEGC,IAAMN,IAAI1B,EAAM,CAAEiC,OAAQ,CAAER,aAAYE,mBAF3C,OAEZO,EAFY,OAGlBrB,EAAaqB,EAAOC,MACpBP,EAAQQ,KAAK,KAJK,gDAMlBC,QAAQnE,MAAR,MANkB,yDAAH,qDAUnBoE,KACC,CAACb,EAAYE,EAAeC,EAASf,IAGtC,mCACE,eAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAA/B,gFAGA,cAACqF,EAAA,EAAD,U,qDCtCFzF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCwF,UAAW,CACTjF,OAAQ,EACRC,MAAO,IACP,aAAc,CACZiF,YAAa,EACbC,aAAc,IAEhB,sCAAuC,CACrCxF,MAAOF,EAAMG,QAAQC,QAAQC,MAE/B,eAAgB,CACdH,MAAOF,EAAMG,QAAQwF,UAAUtF,WAkCtBuF,GA7BI,SAAC,GASb,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,UACAnC,EAMI,EANJA,MACAoC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACGC,EACC,sFACIX,EAAc1F,KAAd0F,UACR,OACE,cAACY,GAAA,EAAD,aACE/E,UAAWmE,EACX9D,QAAQ,SACRmE,MAAOA,EACPlC,MAAOA,EACP0C,KAAMP,EACNQ,SAAUP,EACVE,WAAYC,GAAYD,EACxBnF,MAAOoF,EACPK,WAAY,CACVC,eAAgBR,GAAQ,cAACS,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAkCV,MAExDG,K,8BCzCJrG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2G,OAAQ,CACNC,OAAQ,GACRpG,MAAO,IACPqG,aAAc,QAwBHC,GApBK,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,GAAIlB,EAAuC,EAAvCA,MAAOlC,EAAgC,EAAhCA,MAAO2C,EAAyB,EAAzBA,SAAUtE,EAAe,EAAfA,SACzC2E,EAAW7G,KAAX6G,OAER,OACE,eAACK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYF,GAAIA,EAAhB,SAAqBlB,IACrB,eAACqB,GAAA,EAAD,CACEb,KAAMU,EACNI,QAASJ,EACTpD,WAAiBzB,IAAVyB,EAAsB,GAAKA,EAClCtC,UAAWsF,EACXL,SAAUA,EALZ,UAOE,cAACc,EAAA,EAAD,CAAUzD,WAAOzB,EAAjB,mBACCF,SCrBHlC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqH,aAAc,CACZT,OAAQ,GACRpG,MAAO,IACPqG,aAAc,IAEhBS,OAAQ,CAAEC,QAAS,GAAI9G,WAAY,IAAKP,MAAO,aAiKlCsH,GA9JC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAAsB,EACfzF,mBAAS,IADM,mBACtC0F,EADsC,KAC7BC,EAD6B,OAEZ9H,KAAzBuH,EAFqC,EAErCA,aAAcC,EAFuB,EAEvBA,OAEhBO,EAA0B,CAC9BC,QAAQ,EACRC,MAAO,CAAE7H,MAAO,UAGZ8H,EAAiB,SAACC,GAAD,OACrBL,EAAW,2BAAKD,GAAN,kBAAgBM,EAAEC,OAAO7B,KAAO4B,EAAEC,OAAOvE,UAVR,EAYXwE,mBAAQ,WAaxC,MAAO,CAAEC,YAZSX,EAAKY,QAAO,SAACC,EAASC,GAGtC,OAFIA,EAAMC,QAAUF,EAAQG,SAASF,EAAMC,MAAME,eAC/CJ,EAAQtD,KAAKuD,EAAMC,MAAME,cACpBJ,IACN,IAQ8BK,SANlBlB,EAAKY,QAAO,SAACC,EAASC,GAGnC,OAFIA,EAAMC,QAAUF,EAAQG,SAASF,EAAMC,MAAMnC,OAC/CiC,EAAQtD,KAAKuD,EAAMC,MAAMnC,MACpBiC,IACN,OAGF,CAACb,IAdIW,EAZqC,EAYrCA,YAAaO,EAZwB,EAYxBA,SAsCrB,OACE,qCACE,eAACxD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAxB,UACE,cAAC,GAAD,CACEuD,KAAK,OACL/C,MAAM,WACNC,UAAU,UACVnC,MAAOgE,EAAQkB,QACfxH,UAAWgG,EACXf,SAAU0B,EACVc,gBAAiBjB,IAEnB,cAAC,GAAD,CACEe,KAAK,OACL/C,MAAM,WACNC,UAAU,UACVnC,MAAOgE,EAAQoB,QACf1H,UAAWgG,EACXf,SAAU0B,EACVc,gBAAiBjB,IAEnB,cAAC,GAAD,CACEe,KAAK,OACL/C,MAAM,WACNC,UAAU,UACVnC,MAAOgE,EAAQqB,QACf3H,UAAWgG,EACXf,SAAU0B,EACVc,gBAAiBjB,IAEnB,cAAC,GAAD,CACEe,KAAK,OACL/C,MAAM,WACNC,UAAU,UACVnC,MAAOgE,EAAQsB,QACf5H,UAAWgG,EACXf,SAAU0B,EACVc,gBAAiBjB,OAIrB,eAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAxB,UACE,eAAC,GAAD,CACE0B,GAAG,SACHlB,MAAM,kBACNlC,MAAOgE,EAAQuB,OACf5C,SAAU0B,EAJZ,UAME,cAACZ,EAAA,EAAD,CAAUzD,OAAO,EAAjB,iBACA,cAACyD,EAAA,EAAD,CAAUzD,OAAO,EAAjB,mBAGF,cAAC,GAAD,CACEoD,GAAG,UACHlB,MAAM,UACNlC,MAAOgE,EAAQwB,QACf7C,SAAU0B,EAJZ,SAMGI,EAAYgB,KAAI,SAACC,EAASC,GACzB,OACE,cAAClC,EAAA,EAAD,CAAsBzD,MAAO0F,EAA7B,SACGA,GADYC,QAOrB,cAAC,GAAD,CACEvC,GAAG,OACHlB,MAAM,OACNlC,MAAOgE,EAAQ4B,KACfjD,SAAU0B,EAJZ,SAMGW,EAASS,KAAI,SAACC,EAASC,GACtB,OACE,cAAClC,EAAA,EAAD,CAAsBzD,MAAO0F,EAA7B,SACGA,GADYC,WAOvB,eAACnE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAxB,UACE,cAAC5D,EAAA,EAAD,CACEvB,MAAM,UACNwB,QAAQ,YACRC,QA5GY,WAAO,IACjBkH,EAA8DlB,EAA9DkB,QAASE,EAAqDpB,EAArDoB,QAASC,EAA4CrB,EAA5CqB,QAASC,EAAmCtB,EAAnCsB,QAASC,EAA0BvB,EAA1BuB,OAAQC,EAAkBxB,EAAlBwB,QAASI,EAAS5B,EAAT4B,KACvDC,EAAiB/B,EAAKgC,QAAO,SAAClB,GAClC,IAAMmB,EAAY,IAAIC,KAAKpB,EAAMqB,YAC3BC,EAAehB,GAAW,IAAIc,KAAJ,UAAYd,EAAZ,YAAuBG,GAAW,UAC5Dc,EAAef,GAAW,IAAIY,KAAJ,UAAYZ,EAAZ,YAAuBE,GAAW,UAC5Dc,EAAiBC,QAAQzB,EAAM0B,aAAe1B,EAAMC,OACpD0B,GAAY3B,EAAMC,OAAS,IAAInC,KAC/B8D,GAAe5B,EAAMC,OAAS,IAAIE,aAExC,QACImB,GAAsBH,GAAaG,MACnCC,GAAsBJ,GAAaI,UACzB5H,IAAXgH,GAA8BA,IAAWa,MACxCZ,GAAiBA,IAAYgB,MAC7BZ,GAAcA,IAASW,MAI7BxC,EAAgB8B,IA0FVnI,UAAWiG,EACX8C,UAAWC,OAAOC,OAAO3C,GAAS4C,OALpC,mBASA,cAAC9I,EAAA,EAAD,CACEvB,MAAM,UACNwB,QAAQ,YACRC,QAAS,WACPiG,EAAW,IACXF,EAAgBD,IAElBpG,UAAWiG,EAPb,0B,SCvJFxH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwK,UAAW,CACT,UAAW,CACTC,KAA6B,SAAvBzK,EAAMG,QAAQyI,KAAkB,QAAU,cAiBvC8B,GAZG,SAAC,GAAc,IAAZ3F,EAAW,EAAXA,KACXyF,EAAc1K,KAAd0K,UACR,OACE,eAAC,KAAD,CAAYhK,MAAO,IAAKoG,OAAQ,IAAK7B,KAAMA,EAAM1D,UAAWmJ,EAA5D,UACE,cAAC,KAAD,IACA,cAAC,KAAD,CAAgBG,QAAQ,YACxB,cAAC,KAAD,IACA,cAAC,KAAD,CAAOA,QAAQ,QAAQC,OAAO,UAAUH,KAAK,UAAUI,YAAa,SCfpE/K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8K,SAAU,CACR,UAAW,CACTL,KAA6B,SAAvBzK,EAAMG,QAAQyI,KAAkB,QAAU,cAkBvCmC,GAbE,SAAC,GAAc,IAAZhG,EAAW,EAAXA,KACV+F,EAAahL,KAAbgL,SACR,OACE,eAAC,KAAD,CAAWtK,MAAO,IAAKoG,OAAQ,IAAK7B,KAAMA,EAAM1D,UAAWyJ,EAA3D,UACE,cAAC,KAAD,CAAMlC,KAAK,WAAW+B,QAAQ,QAAQC,OAAO,UAAUH,KAAK,YAC5D,cAAC,KAAD,CAAeO,gBAAgB,QAC/B,cAAC,KAAD,CAAOL,QAAQ,UACf,cAAC,KAAD,IACA,cAAC,KAAD,Q,UChBA7K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiL,SAAU,CACR,+BAAgC,CAC9B/K,MAA8B,SAAvBF,EAAMG,QAAQyI,KAAkB,QAAU,cAsBxCsC,GAjBE,SAAC,GAAsB,IAApBnG,EAAmB,EAAnBA,KAAMoG,EAAa,EAAbA,OAChBF,EAAanL,KAAbmL,SACFG,EAAYC,aAAc,gCAAkC,UAAY,QAE9E,OACE,eAAC,KAAD,CAAU7K,MAAO,IAAKoG,OAAQ,IAAKvF,UAAW4J,EAA9C,UACE,cAAC,KAAD,CAAKN,QAAQ,QAAQ5F,KAAMA,EAAMuG,YAAa,GAAIzF,MAAO,CAAE4E,KAAMW,GAAjE,SACGrG,EAAKqE,KAAI,SAACmC,EAAOjC,GAAR,OACR,cAAC,KAAD,CAAMjD,KAAMkF,EAAMlF,KAAuBoE,KAAMU,EAAO7B,IAAzBiC,EAAMlF,WAGvC,cAAC,KAAD,IACA,cAAC,KAAD,CAAQmF,cAAc,MAAM5E,OAAQ,GAAI6E,SAAU,GAAIC,SAAS,e,kDCrB/D5L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2L,MAAO,CACLC,SAAU,cACVpL,MAAO,MACPoG,OAAQ,OACRiF,YAAa,MACbC,WAAY,MACZjF,aAAc,QA6BHkF,GAzBI,SAAC,GAAsB,IAApBhH,EAAmB,EAAnBA,KAAMiH,EAAa,EAAbA,OAClBL,EAAU7L,KAAV6L,MAGR,OAFA5G,EAAKkH,MAAK,SAACC,EAAMC,GAAP,OAAgBA,EAAKC,MAAQF,EAAKE,SAG1C,eAACC,GAAA,EAAD,CAAOC,cAAY,EAACjL,UAAWsK,EAA/B,UACE,cAACY,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BV,EAAO,KAClC,cAACS,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BV,EAAO,UAItC,cAACW,GAAA,EAAD,UACG5H,EAAKqE,KAAI,SAACmC,GAAD,OACR,eAACiB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BnB,EAAMlF,OACjC,cAACoG,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BnB,EAAMa,OAAS,uBAF7Bb,EAAMlF,eCxBzBuG,GAAgB,CACpBC,MAAO,CACL,CAAExG,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,IAAKyI,MAAO,GACjC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,GAClC,CAAE/F,KAAM,KAAM1C,MAAO,KAAMyI,MAAO,IAEpCU,KAAM,CACJ,CAAEzG,KAAM,MAAO0G,QAAS,SAAUX,MAAO,GACzC,CAAE/F,KAAM,MAAO0G,QAAS,SAAUX,MAAO,GACzC,CAAE/F,KAAM,MAAO0G,QAAS,UAAWX,MAAO,GAC1C,CAAE/F,KAAM,MAAO0G,QAAS,YAAaX,MAAO,GAC5C,CAAE/F,KAAM,MAAO0G,QAAS,WAAYX,MAAO,GAC3C,CAAE/F,KAAM,MAAO0G,QAAS,SAAUX,MAAO,GACzC,CAAE/F,KAAM,MAAO0G,QAAS,WAAYX,MAAO,IAE7CY,gBAAiB,CACf,CAAE3G,KAAM,KAAM+F,MAAO,GACrB,CAAE/F,KAAM,MAAO+F,MAAO,IAExBa,QAAS,CACP,CAAE5G,KAAM,KAAM+F,MAAO,GACrB,CAAE/F,KAAM,MAAO+F,MAAO,IAExBc,OAAQ,GACRC,UAAW,IAGPrN,GAAYC,YAAW,CAC3BqF,UAAW,CACTgI,UAAW,IACXC,UAAW,OACXC,eAAgB,UAqGLC,GAjGA,SAAC,GAAc,IAAZ9F,EAAW,EAAXA,KACV+F,EAAU1N,KAEV2N,EAAetF,mBAAQ,WAC3B,IAAMuF,EAAQC,KAAKC,MAAMD,KAAKE,UAAUjB,KA4CxC,OAnBAnF,EAAKqG,SAAQ,SAACvF,GACZ,IAAMmB,EAAY,IAAIC,KAAKpB,EAAMqB,aAxBf,SAACuC,GAAU,IACrBU,EAA6Da,EAA7Db,MAAOC,EAAsDY,EAAtDZ,KAAME,EAAgDU,EAAhDV,gBAAiBC,EAA+BS,EAA/BT,QAASC,EAAsBQ,EAAtBR,OAAQC,EAAcO,EAAdP,UACvDN,EAAMV,EAAK4B,cAAc3B,QACzBU,EAAKX,EAAK6B,aAAa5B,QACvBY,EAAgBiB,OAAO9B,EAAKpC,iBAAiBqC,QAC7Ca,EAAQgB,OAAO9B,EAAK+B,cAAc9B,QAElC,IAAM+B,EAAejB,EAAOkB,MAAK,SAAC7E,GAAD,OAAUA,EAAKlD,OAAS8F,EAAKjC,YAPlC,EAQSiC,EAAKhD,QAAlCgB,EARoB,EAQpBA,YAAakE,EARO,EAQPA,YACfC,EAAkBnB,EAAUiB,MAAK,SAACjF,GAAD,OAAaA,EAAQoF,OAASpE,KAEjEgE,EAAcA,EAAa/B,QAC1Bc,EAAOlI,KAAK,CAAEqB,KAAM8F,EAAKjC,SAAUkC,MAAO,IAE3CkC,EAAiBA,EAAgBlC,QAEnCe,EAAUnI,KAAK,CACbqB,KAAMgI,EACNE,KAAMpE,EACNiC,MAAO,IAaXoC,CAAY,CACVT,aARmBrE,EAAU+E,WAS7BT,YARkBtE,EAAUgF,SAS5B3E,eARqBC,QAAQzB,EAAM0B,aAAe1B,EAAMC,OASxD0F,YARkBlE,QAAQzB,EAAMoG,kBAShCzE,UARgB3B,EAAMC,OAAS,IAAInC,MAAQ,YAS3C8C,QAAS,CAAEkF,aARQ9F,EAAMC,OAAS,IAAIW,SAAW,YAQzBgB,aAPL5B,EAAMC,OAAS,IAAIE,cAAgB,kBAWnDgF,IACN,CAACjG,IAEJ,OACE,sBAAKpG,UAAWmM,EAAQpI,UAAxB,UACE,eAACD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAAUwM,MAAM,SAA/C,mCAGA,cAAC,GAAD,CAAU3H,KAAM0I,EAAaZ,WAG/B,eAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAAUwM,MAAM,SAA/C,kCAGA,cAAC,GAAD,CAAW3H,KAAM0I,EAAaX,UAEhC,eAAC3H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAAUwM,MAAM,SAA/C,sCAGA,cAACkC,GAAD,CAAU7J,KAAM0I,EAAaT,gBAAiB7B,OAAQ,CAAC,UAAW,gBAGpE,eAAChG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAAUwM,MAAM,SAA/C,mCAGA,cAACkC,GAAD,CAAU7J,KAAM0I,EAAaR,QAAS9B,OAAQ,CAAC,UAAW,gBAG5D,eAAChG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAAUwM,MAAM,SAA/C,mCAGA,cAAC,GAAD,CAAY3H,KAAM0I,EAAaN,UAAWnB,OAAQ,CAAC,UAAW,kBAGhE,eAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKxB,MAAM,UAAUwM,MAAM,SAA/C,gCAGA,cAAC,GAAD,CAAY3H,KAAM0I,EAAaP,OAAQlB,OAAQ,CAAC,OAAQ,sB,8BCrJ1DlM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6O,KAAM,CACJC,SAAU,EACVpO,gBAAiBV,EAAMG,QAAQ4O,WAAWC,MAC1CpI,OAAQ,OACRqI,QAAS,OACTC,cAAe,SACfC,SAAU,UAEZC,KAAM,CACJC,WAAY,GAEdC,gBAAiB,CACfR,SAAU,EACVpI,SAAU,WACVhG,gBAAiBV,EAAMG,QAAQ4O,WAAWQ,SAE5CC,MAAO,CACL9I,SAAU,WACV+I,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,YAAa,GACbC,aAAc,GACdnP,gBAAiBV,EAAMG,QAAQ4O,WAAWC,WAuC/Bc,GAnCK,SAAC,GAAkB,IAAhB9N,EAAe,EAAfA,SAAe,EACWlC,KAAvC+O,EAD4B,EAC5BA,KAAMO,EADsB,EACtBA,KAAMI,EADgB,EAChBA,MAAOF,EADS,EACTA,gBADS,EAEHrN,mBAAS,GAFN,mBAE7B8N,EAF6B,KAEjBC,EAFiB,KAI9BC,EAAS9H,mBACb,kBACEnG,EAASoH,KAAI,SAAC8G,EAAO5G,GAAR,OACX,cAAC6G,GAAA,EAAD,CAEE9O,UAAWmO,EACXzH,MAAO,CAAEqI,OAAQL,IAAezG,GAAS,EAAI,GAH/C,SAKGlG,IAAMiN,aAAaH,IAJf5G,QAOX,CAACtH,EAAU+N,EAAYP,IAGzB,OACE,sBAAKnO,UAAWwN,EAAhB,UACE,cAACyB,GAAA,EAAD,CACEjP,UAAW+N,EACXzL,MAAOoM,EACPzJ,SAAU,SAACiK,EAAGC,GAAJ,OAAeR,EAAWQ,IACpCC,UAAU,YAJZ,SAMGzO,EAASoH,KAAI,SAAC8G,EAAO5G,GAAR,OACZ,cAACoH,GAAA,EAAD,CAAK/M,MAAO2F,EAAmBzD,MAAOqK,EAAMS,MAAMC,SAA1BtH,QAG5B,qBAAKjI,UAAWiO,EAAhB,SAAkCW,Q,kICjClCnQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgP,MAAO,CACLS,IAAK,EACLC,KAAM,EACNnP,OAAQ,EACRgH,QAAS,EACTb,SAAU,WACVlG,MAAO,OACPoG,OAAQ,OACRlG,gBAAiBV,EAAMG,QAAQ4O,WAAWQ,QAC1CJ,SAAU,UAEZnD,OAAQ,CACNpF,OAAQ,MACRiK,WAAY,GACZC,cAAe,IAEjBC,cAAe,CACbnK,OAAQ,OAEVoK,cAAe,CACbpK,OAAQ,OACRW,QAASvH,EAAMiR,QAAQ,GACvB,+BAAgC,CAC9BzQ,MAAO,OACPoG,OAAQ,SAGZsK,aAAc,CACZrF,YAAa7L,EAAMiR,QAAQ,QAIzBE,GAASC,KAAG5O,EAAU,CAC1B6O,WAAY,CAAC,aACbC,KAAM,YAQR,IAAMC,GAAgB,wBAwRPC,GAtRO,WACpB,IAAMC,EAASC,4BADW,EAE4C5R,KAA9DkP,EAFkB,EAElBA,MAAOhD,EAFW,EAEXA,OAAQ+E,EAFG,EAEHA,cAAeC,EAFZ,EAEYA,cAAeE,EAF3B,EAE2BA,aAF3B,EAIMjP,qBAJN,mBAInB0P,EAJmB,KAITC,EAJS,OAKE3P,mBAAS,IALX,mBAKnB4P,EALmB,KAKXC,EALW,OAMkB7P,mBAAS4P,GAN3B,mBAMnBE,EANmB,KAMHC,EANG,OAQE/P,mBAAS,CACnCgQ,GAAI,CACFC,IAAK,GACLC,IAAK,IAEPC,GAAI,CACFF,IAAK,GACLC,IAAK,MAfiB,mBAQnBE,EARmB,KAQXC,EARW,OAkBErQ,mBAAS,CACnCsQ,MAAO,GACPC,OAAQ,KApBgB,mBAkBnB3N,EAlBmB,KAkBX4N,EAlBW,KAuB1B/N,qBAAU,WACRsN,EAAkBH,KACjB,CAACA,IAGJnN,qBAAU,WACR,IAAMgO,EAAa,uCAAG,WAAO3L,GAAP,mBAAApC,EAAA,+EAEAC,IAAMN,IAAN,UAAavB,EAAb,qBAAkCgE,IAFlC,OAEZ4L,EAFY,QAGZC,EAAWD,EAAI5N,MAER8N,YACL5I,EAAc2I,EAASC,UAAUC,MAAM,KAC7CR,EAAU,CACRL,GAAI,CACFC,IAAKjI,EAAY,GACjBkI,IAAKlI,EAAY,IAEnBmI,GAAI,CACFF,IAAKjI,EAAY,GACjBkI,IAAKlI,EAAY,OAKnB2I,EAASL,OACXE,EAAU,CAAEF,MAAOK,EAASL,QAG1BK,EAASJ,QACXC,EAAU,CAAED,OAAQI,EAASJ,SAxBb,kDA2BlBvN,QAAQnE,MAAR,MA3BkB,0DAAH,sDA+BbiS,EAnEV,SAAwBpO,GACtB,IAAMqO,EAAIC,SAASC,OAAOC,MAAM,YAAcxO,EAAI,oBAClD,OAAOqO,EAAIA,EAAEI,MAAQ,KAiECC,CAAe,YAE/BN,IACFnB,EAAYmB,GACZL,EAAcK,GACd5B,GAAOmC,KAAK,SAAU,CAAE3B,SAAUoB,IAClC5B,GAAOoC,GAAG,SAAS,SAAChL,GAClBuJ,GAAU,SAAC0B,GAAD,6BAAoBA,GAApB,CAAgCjL,aAG7C,IAEH,IAAMkL,EAAW,uCAAG,yCAAA9O,EAAA,yDAAS0N,EAAT,EAASA,OAAQxN,EAAjB,EAAiBA,OAG/B2N,OAAStQ,GACT2C,EAAO2N,OAJO,0CAOI5N,IAAMN,IAAN,UAAa5B,EAAb,kBAA8BmC,EAAO2N,SAPzC,OAORG,EAPQ,OAQdH,EAASG,EAAI5N,KARC,yDAUd0M,EAAO7P,EAAU,kDAVH,kCAgBdyQ,GACFqB,EAAmB,CACjBb,UAAU,GAAD,OAAKR,EAAOD,GAAGD,IAAf,YAAsBE,EAAOD,GAAGF,IAAhC,YAAuCG,EAAOJ,GAAGE,IAAjD,YAAwDE,EAAOJ,GAAGC,MAE7EyB,EAAW,2BAAQ9O,GAAR,IAAgB2N,YAGpB3N,EAAO2N,QACdkB,EAAmB,CAAElB,UACrBmB,EAAc,CAAEpB,MAAO1N,EAAO0N,QAGvB1N,EAAO0N,QACdmB,EAAmB,CACjBnB,MAAO1N,EAAO0N,OAEhBoB,EAAc,IAhCE,oBAoCE/O,IAAMgP,KACtBnR,EACA,CACEiR,mBACAC,eAEF,CACEE,iBAAiB,IA3CL,QAoCVlB,EApCU,OA+ChBf,EAAYe,EAAI5N,MAChBoM,GAAOmC,KAAK,SAAU,CAAE3B,SAAUgB,EAAI5N,OACtCoM,GAAOoC,GAAG,SAAS,SAAChL,GAClBuJ,GAAU,SAAC0B,GAAD,6BAAoBA,GAApB,CAAgCjL,UAE5C4I,GAAOoC,GAAG,SAAS,SAACjR,GACdA,EAAIwR,QAAyB,uCAAfxR,EAAIwR,QACpBrC,EAAO7P,EAAU,iCAtDL,mDA0DhB6P,EAAO7P,EAAU,mDA1DD,kEAAH,sDA8DXmS,EAAU,uCAAG,sBAAApP,EAAA,+EAETC,IAAMoP,OAAOvR,EAAY,CAC7BsC,KAAM,CAAEgC,GAAI4K,GACZsC,QAAS,CAAEC,cAAe,OAC1BL,iBAAiB,IALJ,OAOfjC,EAAY,MACZT,GAAOgD,IAAI,SACXhD,GAAOgD,IAAI,SACXlB,SAASC,OAAS,mDAVH,gDAYfzB,EAAO7P,EAAU,sDAZF,yDAAH,qDAgBVwS,EAAoB,uCAAG,4BAAAzP,EAAA,+EAEPC,IAAMN,IAAI3B,GAFH,OAEnBgQ,EAFmB,OAGzB0B,OAAOrQ,SAASsQ,QAAhB,iEAC4D3B,EAAI5N,KAAKwP,QAJ5C,gDAOzBtP,QAAQnE,MAAM,KAAI0T,UAPO,yDAAH,qDAWpBC,EAAYC,uBAChB,SAACC,EAAOC,EAAOC,EAAOC,GAAtB,OACExC,EAAU,CACRL,GAAI,CAAEC,IAAKyC,EAAOxC,IAAKyC,GACvBxC,GAAI,CAAEF,IAAK2C,EAAO1C,IAAK2C,OAE3B,IAkCF,OACE,sBAAKzT,UAAW2N,EAAhB,UACE,eAAC7J,EAAA,EAAD,CAAMC,WAAS,EAAC/D,UAAW2K,EAAQ3G,QAAQ,eAAe0P,WAAW,SAArE,UAEE,cAAC5P,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CACEC,KAAM,cAAC,KAAD,CAAU7T,UAAW6P,IAC3B7K,KAAOsL,EAAqB,aAAV,QAClBwD,KAAMjS,EAHR,SAKE,cAAC,GAAD,CACEkS,aAAczD,EACd9M,OAAQA,EACRwQ,QAzCQ,WAElB,IAAM/K,EAASD,OAAOC,OAAO+H,GAC1BjJ,KAAI,SAACzF,GAAD,MAAW,CAACA,EAAMuO,IAAKvO,EAAMwO,QACjCmD,OAEH,GAAIhL,EAAOiL,OAAM,SAAC5R,GAAD,MAAqB,KAAVA,KAC1B8P,EAAY,CAAEpB,OAAQ,GAAIxN,gBAGvB,GAAIyF,EAAOiL,OAAM,SAAC5R,GAAD,OAAWA,GAAS4N,GAAciE,KAAK7R,MAC3D8P,EAAY,CAAEpB,SAAQxN,eACnB,CAYH4M,EAAO7P,EAAU,gDAXD,kBACd0Q,EAAU,CACRL,GAAI,CACFC,IAAK,GACLC,IAAK,IAEPC,GAAI,CACFF,IAAK,GACLC,IAAK,YAqBHsD,OAAQ1B,EACR2B,cA9Ce,SAACzN,GAAD,OACzBwK,EAAU,2BAAK5N,GAAN,kBAAeoD,EAAEC,OAAO7B,KAAO4B,EAAEC,OAAOvE,gBAiD7C,cAACwB,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAf,SACE,eAAC3P,EAAA,EAAD,CAAYpF,MAAM,UAAUwB,QAAQ,KAAKgL,MAAM,SAASrH,QAAQ,SAAhE,4BAEE,eAACC,EAAA,EAAD,WAAauM,EAAOtH,OAApB,4BAGJ,eAACpF,EAAA,EAAD,CAAM6P,MAAI,EAAC5P,WAAS,EAAC6P,GAAI,EAAG5P,QAAQ,WAApC,UACE,cAAC,GAAD,CACE6P,KAAM,cAAC,KAAD,IACNS,UAAQ,EACRtP,KAAK,gBACL8O,KAAMjS,EAJR,SAME,cAAC,GAAD,CAASuE,KAAMoK,EAAQnK,gBAAiBsK,MAE1C,cAAC,GAAD,CACEkD,KAAM,cAAC,KAAD,IACNS,UAAQ,EACRtP,KAAK,kBACL8O,KAAMjS,EAJR,SAME,cAAC,GAAD,CAAe0S,WAAYxB,MAE7B,cAAC,GAAD,CACEc,KAAM,cAAC,KAAD,IACNS,UAAQ,EACRtP,KAAK,sBACL8O,KAAMjS,EACNkH,UAAWuH,EALb,SAOE,cAAC,GAAD,CAAgBA,SAAUA,YAMhC,eAACxM,EAAA,EAAD,CAAMC,WAAS,EAAC/D,UAAW0P,EAA3B,UACE,cAAC5L,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAG5T,UAAW2P,EAA7B,SACE,qBAAKjK,GAAI/D,EAAT,SACE,cAAC,GAAD,CACE6S,WAAY9D,EACZ+D,eAAgBrB,EAChBsB,cAAepE,QAIrB,cAACxM,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAG5T,UAAW2P,EAA7B,SACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAWvJ,KAAMsK,EAAgBiE,QAASlE,EAAWlB,QAAQ,eAC7D,cAAC,GAAD,CAAWnJ,KAAMsK,EAAgBnB,QAAQ,cACzC,cAAC,GAAD,CAAQnJ,KAAMsK,EAAgBnB,QAAQ,uB,wHCvVnC,OAA0B,2C,sCCUnCqF,GAAyB,SAACC,GAa9B,IAAMC,EAAaC,cAZnB,SAAuBzF,EAAO0F,GAAU,IAC9BC,EAAmBD,EAAnBC,eACA5P,EAAaiK,EAAbjK,SAQR,MAAO,CAAE6P,SAAUL,EAPH,CACdxP,WACA8P,KAAM,CACJC,aAAcH,KAI0BD,cAGxCK,EAAaC,GAAkBR,GACrC,OAAOS,aAAoBF,IAGvBC,GAAoB,SAACR,GACzB,OAAO,SAA2BxF,GAChC,IAAM0F,EAAUQ,eACVC,EAAaX,EAAWxF,EAAO0F,GAC7BE,EAAaO,EAAWC,QAAxBR,SACFS,EAAcC,iBAAOtG,EAAMjK,UACzBA,EAA2CiK,EAA3CjK,SAAUwQ,EAAiCvG,EAAjCuG,UAAWC,EAAsBxG,EAAtBwG,OAAQC,EAAczG,EAAdyG,UAE/BC,EAAe3C,uBACnB,SAACzM,GACCoO,EAAQC,eAAegB,SAASrP,EAAEsP,OAClCL,EAAUjP,KAEZ,CAACoO,EAAQC,eAAgBY,IA6C3B,OA1CAxS,qBACE,WAaE,OAZA6R,EAASiB,MAAMnB,EAAQjN,KACvBiN,EAAQjN,IAAImK,GAAGkE,KAAQC,KAAKC,MAAMC,QAASP,GAEvCD,GACFf,EAAQjN,IAAImK,GAAGkE,KAAQC,KAAKC,MAAME,QAAST,GAGzCD,IACFd,EAAQjN,IAAImK,GAAGkE,KAAQC,KAAKC,MAAMG,WAAYX,GAC9Cd,EAAQjN,IAAImK,GAAGkE,KAAQC,KAAKC,MAAMI,SAAUZ,IAGvC,WACLd,EAAQjN,IAAI+K,IAAIsD,KAAQC,KAAKC,MAAMC,QAASP,GAExCD,GACFf,EAAQjN,IAAI+K,IAAIsD,KAAQC,KAAKC,MAAME,QAAST,GAG1CD,IACFd,EAAQjN,IAAI+K,IAAIsD,KAAQC,KAAKC,MAAMG,WAAYX,GAC/Cd,EAAQjN,IAAI+K,IAAIsD,KAAQC,KAAKC,MAAMI,SAAUZ,IAG/CZ,EAASyB,YAGb,CAAC3B,EAAQjN,IAAKmN,EAAUc,EAAcD,EAAWD,IAGnDzS,qBACE,WACkB,MAAZgC,GAAoBA,IAAasQ,EAAYD,UAC/CR,EAAS0B,YAAYvR,GACrBsQ,EAAYD,QAAUrQ,KAG1B,CAAC6P,EAAU7P,IAGNoQ,IAIEoB,GAAuBjC,IAClC,SAACkC,GAAD,OACE,IAAIC,WAAQV,KAAZ,2BACKS,GADL,IAEEE,KAAM,CACJC,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,QAAQ,EACRC,cAAc,GAEhBnC,KAAK,2BACA2B,EAAQ3B,MADT,IAEFA,MAAM,EACNwB,QAAQ,UAKHY,GAAkB3C,IAC7B,SAACkC,GAAD,OACE,IAAIC,WAAQV,KAAZ,2BACKS,GADL,IAEEE,KAAM,CACJC,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,QAAQ,EACRC,cAAc,SCzGhBE,GAAkB,CAAC,UAAW,WAG9B/Y,GAAYC,aAAW,iBAAO,CAClC0H,KAAM,CACJ2F,UAAW,QACX+B,SAAU,OACV,yBAA0B,CACxB5H,QAAS,WAGbuR,MAAO,CACL,2BAA4B,CAC1BvY,OAAQ,IACRgH,QAAS,MAGbwR,cAAe,CACb,MAAO,CACLxY,OAAQ,IACRL,MAAO,cAsJE8Y,GA3FH,SAAC,GAAkD,IAAhDnD,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACnCvI,EAAU1N,KAD4C,EAE5BmC,qBAF4B,mBAErDgX,EAFqD,KAE3CC,EAF2C,KAGtDC,EAAUhR,mBACd,kBACEkC,OAAO+O,SAxDUvH,EAwDYgE,EAvDjChE,EACGzI,KAAI,SAACb,GACJ,IAAM8Q,EAAS9Q,EAAM+Q,mBAAqB/Q,EAAM+Q,kBAAkBD,OAAU,GACtEE,EAAa,CACjBxS,GAAIwB,EAAMiR,OACVxT,KAAMuC,EAAMvC,KACZyT,KAAMlR,EAAMkR,KACZC,OAAQL,EAAM5P,QAAO,SAACuL,GAAD,MAAwB,UAAdA,EAAKpM,SAItC,GAAIL,EAAM0B,aAA0C,UAA3B1B,EAAM0B,YAAYrB,KACzC,OAAO,2BACF2Q,GADL,IAEEtP,YAAa1B,EAAM0B,YAAYA,cAKnC,GAAI1B,EAAMC,OAASD,EAAMC,MAAMmR,aAAc,CAE3C,IAAMC,EAAmBrR,EAAMC,MAAMmR,aAAa1P,YAAY,GAAG,GAC3D4P,EAAiBtR,EAAMC,MAAMmR,aAAa1P,YAAY,GAAG,GAC/D,OAAO,2BACFsP,GADL,IAEEtP,YAAa,EACV2P,EAAiB,GAAKC,EAAe,IAAM,GAC3CD,EAAiB,GAAKC,EAAe,IAAM,KAKlD,OAAO,QAERpQ,OAAOO,SACP3B,QAAO,SAACyR,EAAQvR,GACf,IACMwR,EADO1P,OAAO2P,KAAKF,GAAQ1Q,KAAI,SAACiJ,GAAD,OAAYA,EAAOS,MAAM,KAAK1J,IAAI6E,WACtDG,MACf,SAACiE,GAAD,OAAY4H,KAAKC,IAAI7H,EAAO,GAAK9J,EAAM0B,YAAY,KAlEzC,QA2EZ,OANI8P,EACFD,EAAOC,GAAK/U,KAAKuD,GAEjBuR,EAAOvR,EAAM0B,YAAYkQ,KAAK,MAAQ,CAAC5R,GAGlCuR,IACN,MAOyC1Q,KAAI,WAAmBE,GAAnB,IA3DpCf,EA2DoC,mBAAE8J,EAAF,KAAUR,EAAV,YAC5C,cAACuI,GAAA,EAAD,CACE1T,SAAU2L,EAAOS,MAAM,KAAKuH,UAE5BnF,KACE,IAAIuC,KAAQ6C,KAAK,CACfC,QAAS1I,EAAOtH,OAAS,EAAIiQ,IAjE3BjS,EAiE8CsJ,EAAO,GAhE3C,IAAxBtJ,EAAMmR,OAAOnP,OAAehC,EAAMkR,KAAKgB,kBAAoBlS,EAAMmR,OAAO,GAAGgB,WAiE/DC,YAAa,CAAC,GAAI,IAClBlP,SACEoG,EAAOtH,OAAS,EACZ,IAAIkN,KAAQmD,MAAM,KAAM,MACxB,IAAInD,KAAQmD,MAAM,GAAI,MAVlC,SAcE,cAACC,GAAA,EAAD,CAAOxZ,UAAWmM,EAAQsL,MAA1B,SACE,cAACgC,GAAA,EAAD,CAAMzZ,UAAWmM,EAAQ/F,KAAzB,SACGoK,EAAOzI,KAAI,SAACb,GAAD,OACV,eAACwS,GAAA,EAAD,CAAyBhG,WAAW,aAApC,UACE,cAACiG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAQC,IAAK3S,EAAMkR,KAAKpT,KAAM8U,IAAK5S,EAAMkR,KAAKgB,sBAEhD,cAACW,GAAA,EAAD,CACE/Z,UAAWmM,EAAQuL,cACnB3Y,QAASmI,EAAMkR,KAAKpT,KACpBV,UAAW4C,EAAMvC,OAEnB,8BACGuC,EAAMmR,OAAOtQ,KAAI,SAACiS,EAAOC,GAAR,OAChB,qBAEEH,IAAKE,EAAMX,UACXQ,IAAI,wBACJ1a,MAAM,KACNuH,MAAO,CAAEkH,QAAS,UAJbqM,UAZE/S,EAAMxB,YAftBuC,MA3DO,IAACuI,IAoGnB,CAACgE,EAAYrI,IAGf9I,qBAAU,WACR,GAAIuU,EAAU,CAAC,IACLsC,EAA2BtC,EAA3BsC,WAAYC,EAAevC,EAAfuC,WACpB1F,EAAeyF,EAAWrJ,IAAKqJ,EAAWpJ,IAAKqJ,EAAWtJ,IAAKsJ,EAAWrJ,UAE1E2D,EAAe,GAAI,GAAI,GAAI,MAE5B,CAACmD,EAAUnD,IAEd,IAAMqB,EAASzC,uBAAY,SAAC+G,GAC1BvC,EAAYuC,EAAIlE,MAAMmE,WACrB,IAEGtE,EAAY1C,uBAAY,SAAC+G,GACdA,EAAIE,OAAOC,YACfrR,OAAS,GAClB2O,EAAY,QAEb,IAEH,OACE,eAAC2C,GAAA,EAAD,CAAcC,OAAQjD,GAAiBkD,KAAM,EAAGC,iBAAiB,EAAjE,UACE,cAACC,GAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELhD,EACD,cAACiD,GAAA,EAAD,UACGrG,IACGkD,EAGA,cAACL,GAAD,CAAiBlS,SAAS,UAAUyQ,OAAQA,EAAQC,UAAWA,IAF/D,cAACc,GAAD,CAAsBxR,SAAS,UAAUwQ,UAAWC,W,UCzK1DrX,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqc,eAAgB,CACd7b,MAAO,IAETF,aAAc,CACZC,OAAQ,GACRC,MAAO,IACPC,WAAY,IACZP,MAAO,QACPQ,gBAAiBV,EAAMG,QAAQC,QAAQC,KACvC,UAAW,CACTK,gBAAiBV,EAAMG,QAAQC,QAAQO,KACvCT,MAAOF,EAAMG,QAAQC,QAAQQ,YA0DpB0b,GArDQ,SAAC,GAAkB,IAAhB3K,EAAe,EAAfA,SAAe,EACE7R,KAAjCuc,EAD+B,EAC/BA,eAAgB/b,EADe,EACfA,aADe,EAEb2B,wBAASC,GAFI,mBAEhCqa,EAFgC,KAEzBC,EAFyB,OAGPva,mBAAS,KAHF,mBAGhCwa,EAHgC,KAGtBC,EAHsB,KAejCC,EAAUjI,sBAAW,sBAAC,sBAAA/P,EAAA,+EAElBC,IAAMgY,IAAI9Z,EAAc,CAAE6O,WAAU4K,QAAOE,aAFzB,sDAIxBxX,QAAQnE,MAAR,MAJwB,wDAMzB,CAAC6Q,EAAU4K,EAAOE,IAErB,OACE,qCACE,cAACtX,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,GAAD,CAAYpP,MAAM,SAASE,QAAS,SAAC8W,GAAD,OAAWL,EAASK,EAAM3U,OAAOvE,YAEvE,eAACwB,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAf,UACE,cAAC3P,EAAA,EAAD,CAAYwX,cAAY,EAAxB,sBACA,cAACC,GAAA,EAAD,CACE1b,UAAWgb,EACX1Y,MAAO8Y,EACPnW,SAAU,SAACiK,EAAGyM,GAAJ,OAAaN,EAAYM,IACnCC,kBAAkB,OAClBC,IAAK,EACLC,IAAK,SAGT,cAAChY,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,EAAf,SACE,cAACxT,EAAA,EAAD,CACEC,QAAQ,YACRxB,MAAM,UACNmB,UAAWf,EACXqB,QAASgb,EAJX,2B,yCC/CF7c,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCod,OAAQ,CAAEC,MAAO,QAAS5c,WAAY,UACtC6c,WAAY,GACZC,QAAS,CACP7c,gBAAiB,UACjBgF,aAAc,MACd6B,QAAQ,GAAD,OAAKvH,EAAMiR,QAAQ,IAAnB,cAA6BjR,EAAMiR,QAAQ,GAA3C,MACP/Q,MAAO,SAETsd,QAAS,CACP9c,gBAAiB,UACjBgF,aAAc,MACd6B,QAAQ,GAAD,OAAKvH,EAAMiR,QAAQ,IAAnB,cAA6BjR,EAAMiR,QAAQ,GAA3C,MACP/Q,MAAO,SAETud,WAAY,CACV3O,SAAU,aAIR4O,GAAY,aACZC,GAAa,sBAgKJC,GA3JO,SAAC,GAAoB,IAAD,EAAjBhI,EAAiB,EAAjBA,WACfpS,EAAcI,IAAdJ,UADgC,EAEhBvB,oBAAS,GAFO,mBAEjC4b,EAFiC,KAE3BC,EAF2B,OAGhB7b,mBAAS,IAHO,mBAGjC+D,EAHiC,KAG3B+X,EAH2B,OAId9b,wBAASC,GAJK,mBAIjC8b,EAJiC,KAI1BC,EAJ0B,OAKdhc,mBAAS,IALK,mBAKjC4K,EALiC,KAK1BqR,EAL0B,OAMdjc,oBAAS,GANK,mBAMjCnB,EANiC,KAM1BqB,EAN0B,OAOdF,oBAAQ,mBAAIe,GAAS,GAAb,cAAqBC,GAAe,GAApC,IAPM,mBAOjCkb,EAPiC,KAO1BC,EAP0B,KAQhChV,EAAmB+U,EAAnB/U,IAAKiV,EAAcF,EAAdE,UACP7Q,EAAU1N,KACVwe,EAAanW,mBAAQ,kBAdb,SAAC0E,GAAD,OAAWoN,KAAKsE,MAAc,GAAR1R,EAAa,GAAK,KAcrB2R,CAAQ3R,KAAQ,CAACA,IAC5C4R,EAAqBtW,mBACzB,kBAAMkC,OAAO2P,KAAKmE,GAAO1U,QAAO,SAACsQ,GAAD,OAASoE,EAAMpE,QAC/C,CAACoE,IAGGO,EAAc,SAACjD,GACnB2C,GAAS,SAAClS,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBuP,EAAIvT,OAAO7B,KAAOoV,EAAIvT,OAAOyW,cAWzDC,EAAU,uCAAG,gCAAAja,EAAA,+EAEWka,QAAQC,IAChCL,EAAmBrV,KAAI,SAACrC,GAAD,OACrBgY,KAAY9L,SAAS+L,eAAejY,GAAK,CACvCkY,SAAS,EACTve,gBAAiB,WANR,cAETwe,EAFS,OAUT7F,EAAQ6F,EAAY9V,KAAI,SAAC+V,GAC7B,IAAMC,EAAUD,EAAOE,YACvB,OAAOD,EAAQE,UAAUF,EAAQG,YAAY,KAAO,MAEhDC,EAAM,CACVxZ,KAAMA,EACNqT,SAhBa,SAkBTzU,IAAMgP,KAAK/Q,EAAY,CAAE2c,MAAKhc,cAlBrB,OAmBfsa,GAAQ,GAnBO,kDAqBX,KAAItJ,SACNvP,QAAQnE,MAAM,KAAI0T,SAASzP,KAAK9D,SAEhCgE,QAAQnE,MAAM,KAAIG,SAxBL,0DAAH,qDAyChB,OACE,mCACIuC,EAKA,qCACE,cAAC4C,GAAA,EAAD,CACEH,WAAYnF,GAAS,iCACrBA,QAASA,EACT2e,WAAS,EACT9b,MAAOkJ,EACPvG,SA9Da,SAAC2B,GACtB,IAAMyX,EAAQzX,EAAEC,OAAOvE,OACnB+Z,GAAUlI,KAAKkK,IAAoB,KAAVA,KAC3BxB,EAASwB,GACTvd,EAAS,MA2DH0D,MAAM,0BACNkB,GAAG,iBACHqD,WAAY4T,IAEd,uBAAM3c,UAAWmM,EAAQ4P,OAAzB,UACE,cAAC9X,EAAA,EAAD,CAAY5D,QAAQ,SAApB,uBACEsc,EAGA,sBAAM3c,UAAWmM,EAAQgQ,QAAzB,qBAFA,sBAAMnc,UAAWmM,EAAQ+P,QAAzB,wBAKJ,cAACnX,GAAA,EAAD,CACEuZ,WAAS,EACThc,MAAOqC,EACPM,SAAU,SAACuW,GACLA,EAAM3U,OAAOvE,MAAM4G,QAAU,KAAKwT,EAAQlB,EAAM3U,OAAOvE,QAE7DsC,WAAU,UAAKD,EAAKuE,OAAV,IAAoB,KAC9BhK,OAAO,QACPwG,GAAG,aACHlB,MAAM,aACN+C,KAAK,OACLwB,WAAY4T,EACZ4B,WAAS,IAEX,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEpB,QAASvV,EACT/C,KAAMrD,EACN9C,MAAM,UACNoG,SAAUoY,EACVtU,WAAY4T,IAGhBnY,MAAM,QAER,cAACga,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEpB,QAASN,EACThY,KAAMpD,EACN/C,MAAM,UACNoG,SAAUoY,EACVtU,WAAY4T,IAGhBnY,MAAM,eAEPgY,GAAQ,iEACT,eAACrc,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQE,QAxED,WACfqe,cAAchC,GACdC,OAAS/b,GACT4b,GAAQ,IAqE2B5d,MAAM,UAAUkK,UAAW4T,EAAtD,6BAGA,cAACvc,EAAA,EAAD,CAAQJ,UAAWmM,EAAQiQ,WAAY9b,QAASid,EAAYxU,UAAWpE,EAAvE,uBAGA,cAACvE,EAAA,EAAD,CACEE,QAtFU,WAChBgc,GAAWnI,KAAK3I,IAClBoR,EAASgC,YAAYrB,EAAYN,IAE7BrQ,OAAOpB,GAAS,KAAM1K,EAAS,iDAC9BA,EAAS,6BAkFNjC,MAAM,UACNkK,WAAYyC,GAAS7G,IAASgY,GAHhC,2BArEJ,cAACvc,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,MAAM,YAAYyB,QAASiU,EAAvD,6B,UC/GF9V,GAAYC,YAAW,CAC3BmgB,QAAS,CACPpU,WAAY,GACZD,YAAa,IAEfsU,kBAAmB,CACjBvZ,OAAQ,UAkCGwZ,GA9BQ,SAAC,GAAwD,IAAtDlL,EAAqD,EAArDA,KAAMS,EAA+C,EAA/CA,SAAUtP,EAAqC,EAArCA,KAAM8O,EAA+B,EAA/BA,KAAM/K,EAAyB,EAAzBA,SAAUpI,EAAe,EAAfA,SAAe,EACnDC,oBAAS,GAD0C,mBACtEoe,EADsE,KAC9DC,EAD8D,OAEtCxgB,KAA/BogB,EAFqE,EAErEA,QAASC,EAF4D,EAE5DA,kBAEjB,OACE,qCACE,cAACI,GAAA,EAAD,CACElf,UAAW6e,EACXxe,QAASiU,EAAW,QAAU,WAC9BhU,QAAS,kBAAM2e,GAAQ,SAACpU,GAAD,OAAWA,MAClC9B,SAAUA,EAJZ,SAME,qCACG8K,EACAS,GAAYtP,OAGjB,eAACnF,EAAA,EAAD,CAAQC,KAAMkf,EAAQG,QAAS,kBAAMF,GAAQ,IAAQG,SAAS,KAAKC,aAAW,EAA9E,UACE,cAACtf,EAAA,EAAD,UAAciF,IACd,eAAC/E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAoB4T,IACpB,cAAChQ,EAAA,EAAD,CAAMC,WAAS,EAAC/D,UAAW8e,EAAmB9a,QAAQ,eAAtD,SACGrD,cC/BPlC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCM,aAAc,CACZC,OAAQ,GACRC,MAAO,IACPC,WAAY,IACZP,MAAO,QACPQ,gBAAiBV,EAAMG,QAAQC,QAAQC,KACvC,UAAW,CACTK,gBAAiBV,EAAMG,QAAQC,QAAQO,KACvCT,MAAOF,EAAMG,QAAQC,QAAQQ,OAE/B,oBAAqB,CACnBkL,WAAY,SAqCH6U,GAhCM,SAAC,GAA8D,IAA5DvL,EAA2D,EAA3DA,aAAcvQ,EAA6C,EAA7CA,OAAQwQ,EAAqC,EAArCA,QAASI,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACrDpV,EAAiBR,KAAjBQ,aAER,OACE,qCACE,cAAC,GAAD,CACEuF,MAAM,UACNC,UAAU,QACVE,KAAK,IACLrC,MAAOkB,EAAO0N,MACdxM,QAAS2P,IAEX,cAAC,GAAD,CACE7P,MAAM,OACNC,UAAU,SACVE,KAAK,IACLrC,MAAOkB,EAAO2N,OACdzM,QAAS2P,IAEX,cAACjU,EAAA,EAAD,CACEC,QAAQ,YACRxB,MAAM,UACNmB,UAAWf,EACXqB,QAASyT,EAAeK,EAASJ,EACjCuL,UAAWxL,EAAe,cAAC7P,EAAA,EAAD,CAAkBsb,KAAM,UAAS3e,EAL7D,SAOGkT,EAAe,QAAU,c,4HClC5B0L,GAAQ,SAAC,GAAwC,IAAtCrH,EAAqC,EAArCA,KAAMzT,EAA+B,EAA/BA,KAAM+a,EAAyB,EAAzBA,eAAgBha,EAAS,EAATA,GAC3C,OACE,eAACgU,GAAA,EAAD,CAAgChG,WAAW,aAA3C,UACE,cAACiG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAQC,IAAKzB,EAAKpT,KAAM8U,IAAK1B,EAAKuH,4BAEpC,cAAC5F,GAAA,EAAD,CACEhb,QAASqZ,EAAKpT,KACdV,UAAWob,EAAiBA,EAAeE,UAAYjb,EACvDkb,uBAAwB,CAAExf,QAAS,QAASxB,MAAO,aACnDihB,yBAA0B,CAAEzU,MAAO,UAAWhL,QAAS,aAR3D,kBAA0BqF,KAcxBqa,GAAkB,SAAC,GAAmB,IAAjB/a,EAAgB,EAAhBA,KAAM8V,EAAU,EAAVA,IACzBkF,EAAOpO,SAASqO,cAAc,KACpCrO,SAASsO,KAAKC,YAAYH,GAC1BA,EAAKI,SAAWpb,EAChBgb,EAAKK,KAAOvF,EACZkF,EAAKM,QACL1O,SAASsO,KAAKK,YAAYP,IAatBvhB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6hB,MAAO,CACLhR,WAAY,GACZC,cAAe,IAEjBgR,cAAe,CACb1U,UAAW,IACXC,UAAW,OACXC,eAAgB,OAChB,uBAAwB,CACtB9M,MAAO,QA8HEuhB,GAzHG,SAAC,GAAuB,IAArBta,EAAoB,EAApBA,KAAMuO,EAAc,EAAdA,QACnBxI,EAAU1N,KACV2R,EAASC,4BACTsQ,EAAW7Z,mBACf,kBACEV,EAAKY,QAAO,SAACqR,EAAQnR,GACfA,EAAM+Q,mBAAqB/Q,EAAM+Q,kBAAkBD,OACtC9Q,EAAM+Q,kBAAkBD,MAChCvL,SAAQ,YAA0B,IAAvBlF,EAAsB,EAAtBA,KAAM8R,EAAgB,EAAhBA,UACT,UAAT9R,GACF8Q,EAAO1U,KAAK,CACVid,KAAMvH,EAAUwH,OAAOxH,EAAU6E,YAAY,KAAO,GACpDpD,IAAKzB,OAKb,OAAOhB,IACN,MACL,CAACjS,IAgBG0a,EAAa,SAACC,GAClB,IAAMC,EAAeD,EAAQla,OAAOoa,MAAM,GAC1C,GAAID,GAAsC,qBAAtBA,EAAazZ,KAA6B,CAC5D,IAAM2Z,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAC5F,GACf,IACE,IAAM6F,EAAO/U,KAAKC,MAAMiP,EAAM3U,OAAOpD,SAdxB,SAAC6d,GAEpB,IADoBA,EAAWpN,OAAM,SAACP,GAAD,OAAUA,EAAKjO,IAAMiO,EAAKyE,MAAQzE,EAAKhP,QAE1E,MAAM,IAAIlE,MAYN8gB,CAAaF,GACb1M,GAAQ,SAAC6M,GAAD,6BAAaA,GAAb,aAAqBH,OAC7B,MAAOpgB,GACPmP,EAAO7P,EAAU,sDAGrB2gB,EAAOO,WAAWT,EAAc,WAI9BU,EAAc,uCAAG,8CAAApe,EAAA,sDACfqe,EAAM,IAAIC,KADK,eAEOjB,GAFP,0EAERC,EAFQ,EAERA,KAAM9F,EAFE,EAEFA,IAFE,SAGI+G,MAAM/G,GAHV,cAGb3H,EAHa,iBAIAA,EAAS2O,OAJT,QAIbA,EAJa,OAKnBH,EAAIf,KAAKA,EAAMkB,GALI,0KASEH,EAAII,cAAc,CAAExa,KAAM,SAT5B,QASb9D,EATa,OAUbqX,EAAMkH,IAAIC,gBAAgBxe,GAChCsc,GAAgB,CAAE/a,KAAM,aAAc8V,QAXnB,mDAanB1K,EAAO7P,EAAU,kCAbE,wEAAH,qDAiBd2hB,EAAmC,IAAhB9b,EAAK8C,OACxBiZ,EAAuC,IAApBxB,EAASzX,OAElC,OACE,mCACE,eAACpF,EAAA,EAAD,CAAMC,WAAS,EAAf,UAEE,eAACD,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,GAAI5T,UAAWmM,EAAQqU,MAAtC,UACE,cAAC4B,GAAA,EAAD,CAASziB,MAAM,oBAAf,SACE,cAACS,EAAA,EAAD,CAAQE,QAAS,kBAxGP,SAAC+hB,GACrB,IAAMrC,EAAOpO,SAASqO,cAAc,SACpCrO,SAASsO,KAAKC,YAAYH,GAC1BA,EAAKzY,KAAO,OACZyY,EAAKsC,OAAS,mBACdtC,EAAKuC,SAAWF,EAChBrC,EAAKM,QACL1O,SAASsO,KAAKK,YAAYP,GAiGOwC,CAAc1B,IAArC,SACE,cAAC,KAAD,QAGJ,cAACsB,GAAA,EAAD,CAASziB,MAAM,gBAAf,SACE,+BACE,cAACS,EAAA,EAAD,CAAQE,QA/DD,WACjB,IAAMwa,EACJ,gCAAkC2H,mBAAmBnW,KAAKE,UAAUpG,IACtE2Z,GAAgB,CAAE/a,KAAM,kBAAmB8V,SA4DJ/R,SAAUmZ,EAAvC,SACE,cAAC,KAAD,UAIN,cAACE,GAAA,EAAD,CAASziB,MAAM,kBAAf,SACE,+BACE,cAACS,EAAA,EAAD,CAAQE,QAASohB,EAAgB3Y,SAAUoZ,EAA3C,SACE,cAAC,KAAD,UAIN,cAACC,GAAA,EAAD,CAASziB,MAAM,aAAf,SACE,+BACE,cAACS,EAAA,EAAD,CAAQE,QAAS,kBAAMqU,EAAQ,KAAK5L,SAAUmZ,EAA9C,SACE,cAAC,KAAD,aAOR,cAACpe,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,GAAf,SACGxN,EAAK8C,OAAS,GACb,cAACuQ,GAAA,EAAD,CAAMzZ,UAAWmM,EAAQsU,cAAzB,SACGra,EAAK2B,KAAI,SAACb,GAAD,OACR,cAAC,GAAD,eAA0BA,GAAdA,EAAMxB,iB,+BCzK5BjH,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC+jB,KAAM,CACJtU,IAAK,EACLC,KAAM,EACN9I,OAAQ,OACRpG,MAAO,OACPyO,QAAS,OACTvI,SAAU,WACVsd,eAAgB,SAChBjP,WAAY,SACZ5F,SAAU,SACVzO,gBAAiBV,EAAMG,QAAQ4O,WAAWQ,SAE5C0U,QAAS,CACPrd,OAAQ,QACR1G,MAAO,WAETgkB,UAAW,CACTpY,WAAY,QACZ5L,MAAO,UACPikB,WAAY,iBA6BDC,GAzBY,WAAO,IAAD,EACMtkB,KAA7BikB,EADuB,EACvBA,KAAME,EADiB,EACjBA,QAASC,EADQ,EACRA,UAEjBG,EAAepN,iBAAO,MAY5B,OAVAvS,qBAAU,WACR4f,KAAOC,cAAc,CACnBnf,UAAWif,EAAatN,QACxByN,OAAQ,MACRC,MAAM,EACNC,UAAU,EACVC,qBAED,IAGD,sBAAK5d,GAAG,OAAO1F,UAAW0iB,EAA1B,UACE,qBAAKhd,GAAG,UAAU1F,UAAW4iB,EAASW,IAAKP,IAC3C,oBAAItd,GAAG,YAAY1F,UAAW6iB,EAA9B,iC,UCtCApkB,I,cAAYC,aAAW,iBAAO,CAClC8kB,OAAQ,CACNrkB,MAAO,MACPskB,UAAW,GACXhZ,WAAY,SA4BViZ,GAAiB,CACrBC,eAAe,EACfC,qBAAqB,EACrBC,eAAe,EACff,WAAY,YACZgB,UAAW,CAAC,GAAI,IAChBC,UAAW,SACX3kB,WAAY,OACZ4kB,UAAW,EACXC,mBAAoB,IACpBC,eAAgB,CAAEvlB,MAAO,aAGrBwlB,GAAiB,SAACC,GAAD,gBAAaA,EAAKzf,KAAlB,aAA2Byf,EAAK9hB,MAAhC,MAEjB+hB,GAAY,SAAC,GAAc,IAAZje,EAAW,EAAXA,KACXod,EAAW/kB,KAAX+kB,OADsB,EAEU5iB,mBAAS,IAFnB,mBAEvB0jB,EAFuB,KAETC,EAFS,OAGE3jB,mBAAS,IAHX,mBAGvB4jB,EAHuB,KAGbC,EAHa,KAQxBC,EAAc1a,aAAc,gCAE5B8M,EAAUhQ,mBACd,8BAAC,eACI4c,IADL,IAEE5Z,OAAQ4a,EACJ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACxD,CAAC,UAAW,UAAW,UAAW,eAExC,CAACA,IAaH,OAVAC,2BAAgB,WACd,GAAIve,EAAK8C,OAAS,EAAG,CACnB,IACM0b,EA9DK,SAACC,GAChB,IAAMC,EAAY,GAMlB,OALAD,EAAWpT,MAAM,KAAKhF,SAAQ,SAACkH,GAC7B,IAAM1L,EAAQ6c,EAAUC,WAAU,SAAC/c,GAAD,OAAaA,EAAQrD,OAASgP,MACjD,IAAX1L,EAAc6c,EAAU7c,GAAO3F,OAAS,EACvCwiB,EAAUnhB,KAAK,CAAEgB,KAAMgP,EAAMrR,MAAO,OAEpCwiB,EAAUla,MAAK,SAACtH,EAAGqO,GAAJ,OAAUA,EAAErP,MAAQgB,EAAEhB,SAuDjB0iB,CApDT,SAAC5e,GACnB,IAAI6e,EAAa,GACbC,EAAc,GASlB,OAPA9e,EAAKqG,SAAQ,SAACkH,GAAD,OAAWuR,GAAW,UAAOvR,EAAKhP,KAAZ,SACnCugB,EAAcA,EAAYzT,MAAM,MAEpBhF,SAAQ,SAAC2X,GACdA,EAAKe,WAAW,SAAYf,EAAKe,WAAW,OAC/CF,GAAU,UAAOb,EAAKgB,cAAZ,SAEPH,EAwCcI,CAAYjf,IAE7Bme,EAAgBK,EAAeU,MAAM,EAAG,WAExCf,EAAgB,MAEjB,CAACne,IAGF,eAACtC,EAAA,EAAD,CAAMC,WAAS,EAAC2C,MAAO,CAAEvH,MAAO,QAAhC,UACE,cAAC2E,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8H,GAAA,EAAD,CACE7c,MAAM,YACN+c,kBAAkB,KAClB5b,UAAWwjB,EACXve,SAjCa,SAACiK,EAAGqW,GACvBd,EAAYc,IAiCNjjB,MAAOkiB,EACP1I,IAAK,IACLD,IAAK,EACL2J,MAAO,CACL,CAAEljB,MAAO,EAAGkC,MAAO,mBACnB,CAAElC,MAAO,IAAKkC,MAAO,mBAI3B,cAACV,EAAA,EAAD,CAAM6P,MAAI,EAACC,GAAI,GAAf,SACE,qBAAKlO,GAAI9D,EAAT,SACE,cAAC,KAAD,CACE6jB,UAAW,CAAEtB,mBACbrN,QAASA,EACT4O,SAAUlB,EACVmB,MAAOrB,YAQJsB,kBAAKvB,ICrELwB,GA1CF,WACX,IAAMC,EAAiBC,YAAU,CAC/BC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,GACfE,MAAO,KACPC,OAAQ,CAAEC,SAAU,OAGhBC,EAAgBP,YAAU,CAC9BC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,GACfE,MAAO,KACPC,OAAQ,CAAEC,SAAU,OAYtB,OATAhjB,qBAAU,WAEN,IAAMsZ,EAAQ4J,YAAW,WACvB3U,SAAS+L,eAAe,QAAQjX,MAAMkH,QAAU,SAC/C,KACH,OAAO,kBAAM4Y,aAAa7J,MAE3B,IAGD,mCAEI,qCACE,cAAC,IAAS8J,IAAV,CAAc/f,MAAOof,EAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAASW,IAAV,CAAc/f,MAAO4f,EAArB,SACE,cAAC,GAAD,Y,8BCnCNI,GAAYC,aAAe,CAC/BC,WAAY,CACV9D,WAAY,6CAEdhkB,QAAS,CACPyI,KAAM,OACNxI,QAAS,CACPC,KAAM,WAERsF,UAAW,CACTtF,KAAM,YAGV6nB,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJC,SAAU,IAEZ9G,KAAM,CACJxS,WAAY,gBAOhBuZ,GAAaN,aAAe,CAChCC,WAAY,CACV9D,WAAY,6CAEdhkB,QAAS,CACPyI,KAAM,QACNxI,QAAS,CACPC,KAAM,WAERsF,UAAW,CACTtF,KAAM,YAGV6nB,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJC,SAAU,SAiBLE,GATM,SAAC,GAAkB,IAAhBvmB,EAAe,EAAfA,SAChBwmB,EAAkBnd,aAAc,gCAEhCrL,EAAQmI,mBAAQ,kBAAOqgB,EAAkBT,GAAYO,KAAa,CACtEE,IAEF,OAAO,eAACC,GAAA,EAAD,CAAezoB,MAAOA,EAAtB,UAA6B,cAAC0oB,GAAA,EAAD,IAAe1mB,MCnCtC2mB,GAjBH,WACV,OACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACtX,KAAK,IAAIuX,UAAW3B,KACjC,cAAC,IAAD,CAAO5V,KAAK,QAAQuX,UAAW/kB,gBCb7CglB,IAAStE,OACP,cAAC,IAAMuE,WAAP,UACE,cAAC,GAAD,MAEF9V,SAAS+L,eAAe,W","file":"static/js/main.a3c3d780.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, Button, Dialog, DialogTitle } from '@material-ui/core';\r\nimport { DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialog: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  \r\n  submitButton: {\r\n    margin: 10,\r\n    width: 100,\r\n    fontWeight: 800,\r\n    color: 'white',\r\n    backgroundColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst AlertWindow = ({error, resetErrorBoundary}) => {\r\n  const { submitButton, dialog } = useStyles();\r\n  const { title, message } = error;\r\n  return (\r\n    <Dialog open={true}>\r\n      <DialogTitle className={dialog}>{title || 'Error'}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          color=\"default\"\r\n          variant=\"contained\"\r\n          className={submitButton}\r\n          onClick={resetErrorBoundary}\r\n        >\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n\r\nconst UserError = (message, reset, title) => {\r\n  const error = Error(message);\r\n  const defaultCB = () => {};\r\n\r\n  error.title = title || 'Error';\r\n  error.message = message || 'Generic error message';\r\n  error.reset = reset || defaultCB;\r\n  return (error);\r\n};\r\n\r\n\r\nconst ErrorCatcher = ({ children }) => {\r\n  const [error, setError] = useState(undefined);\r\n  const handleReset = () => {\r\n    error.reset();\r\n    setError(undefined);\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      FallbackComponent={AlertWindow}\r\n      onError={err => setError(err)}\r\n      onReset={handleReset}\r\n    >\r\n      {children}\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\n\r\nexport { UserError, AlertWindow };\r\nexport default ErrorCatcher;","export const BASE_URL = 'http://localhost:4000';\r\n\r\n// API ENDPOINTS\r\nexport const GEO_FILTER = `${BASE_URL}/api/geoFilter`;\r\nexport const GET_IDS = `${BASE_URL}/api/getUserIDs`;\r\nexport const REQUEST_TOKEN = `${BASE_URL}/api/requestToken`;\r\nexport const AUTH = `${BASE_URL}/api/auth`;\r\nexport const SEND_TWEET = `${BASE_URL}/api/sendTweet`;\r\nexport const NOTIFICATION = `${BASE_URL}/api/notification`;\r\nexport const SETTINGS = `${BASE_URL}/api/settings`;\r\n\r\nexport const MAP_ID = 'map';\r\nexport const WORDCLOUD_ID = 'wordcloud';\r\n\r\nexport const FABsDesc = {\r\n  params: `Here you can select a specific user and/or a specific hashtag to retrieve your tweeets.\r\n    You could also select a specific area on the map to get all the tweet geoocalized in that area`,\r\n\r\n  filter: `Here you can select specific filter to be applied to the list currently on the client`,\r\n\r\n  schedule: `By authenticating here you can set an interval upon wich a tweet will be published on your\r\n    account with the given text and an image of the map and/or the picture of the wordcloud`,\r\n\r\n  email: `Here you can set a reminder for when a certain treshold (in number of tweet captured) is surpassed\r\n    once the treshold is reached an email to the given address will be sent, remember to check the spam folder`,\r\n};\r\n","import React, { useContext, useState } from 'react';\r\n\r\nconst UserContext = React.createContext();\r\n/**\r\n * authProps = {\r\n    accessToken: res.oauth_token,\r\n    accessTokenSecret: res.oauth_token_secret,\r\n    userId: res.user_id,\r\n    screenName: res.screen_name,\r\n  }\r\n */\r\nexport const UserProvider = ({ children }) => {\r\n  const [authProps, setAuthProps] = useState(undefined);\r\n  const provided = { authProps, setAuthProps };\r\n  return <UserContext.Provider value={provided}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport const useUser = () => {\r\n  const value = useContext(UserContext);\r\n  if (value === null) {\r\n    throw new Error('useUser is outside of a UserProvider');\r\n  }\r\n  return value;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Grid, CircularProgress, Typography } from '@material-ui/core';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { AUTH } from '../constants';\r\nimport { useUser } from '../context/UserContext';\r\n\r\nconst useQuery = () => {\r\n  const location = useLocation();\r\n  return new URLSearchParams(location.search);\r\n};\r\n\r\nconst Auth = () => {\r\n  const query = useQuery();\r\n  const oauthToken = query.get('oauth_token');\r\n  const oauthVerifier = query.get('oauth_verifier');\r\n\r\n  const { setAuthProps } = useUser();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const requestAccess = async () => {\r\n      try {\r\n        const result = await axios.get(AUTH, { params: { oauthToken, oauthVerifier } });\r\n        setAuthProps(result.data);\r\n        history.push('/');\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    requestAccess();\r\n  }, [oauthToken, oauthVerifier, history, setAuthProps]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h3\" color=\"primary\">\r\n          You are about to be redirected... Let's hope everything goes well!\r\n        </Typography>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport { TextField, makeStyles, InputAdornment } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    margin: 5,\r\n    width: 250,\r\n    '& fieldset': {\r\n      borderWidth: 2,\r\n      borderRadius: 25,\r\n    },\r\n    '& .MuiTypography-colorTextSecondary': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '& .Mui-error': {\r\n      color: theme.palette.secondary.main,\r\n    }\r\n  },\r\n}));\r\n\r\nconst InputField = ({\r\n  label,\r\n  fieldName,\r\n  value,\r\n  handler,\r\n  text,\r\n  helperText,\r\n  hasError,\r\n  ...others\r\n}) => {\r\n  const { textField } = useStyles();\r\n  return (\r\n    <TextField\r\n      className={textField}\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={fieldName}\r\n      onChange={handler}\r\n      helperText={hasError && helperText}\r\n      error={hasError}\r\n      InputProps={{\r\n        startAdornment: text && <InputAdornment position=\"start\">{text}</InputAdornment>,\r\n      }}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    height: 50,\r\n    width: 150,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nconst SelectField = ({ id, label, value, onChange, children }) => {\r\n  const { select } = useStyles();\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel id={id}>{label}</InputLabel>\r\n      <Select\r\n        name={id}\r\n        labelId={id}\r\n        value={value === undefined ? '' : value}\r\n        className={select}\r\n        onChange={onChange}\r\n      >\r\n        <MenuItem value={undefined}>-----</MenuItem>\r\n        {children}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { Button, Grid, MenuItem, makeStyles } from '@material-ui/core';\r\nimport { InputField, SelectField } from './InputComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  genericInput: {\r\n    height: 50,\r\n    width: 200,\r\n    marginBottom: 20,\r\n  },\r\n  button: { padding: 10, fontWeight: 800, color: 'white' },\r\n}));\r\n\r\nconst Filters = ({ list, setFilteredList }) => {\r\n  const [filters, setFilters] = useState({});\r\n  const { genericInput, button } = useStyles();\r\n\r\n  const specificInputFieldProps = {\r\n    shrink: true,\r\n    style: { color: 'white' },\r\n  };\r\n\r\n  const onChangeFilter = (e) =>\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n\r\n  const { countryList, cityList } = useMemo(() => {\r\n    const countries = list.reduce((accList, tweet) => {\r\n      if (tweet.place && !accList.includes(tweet.place.country_code))\r\n        accList.push(tweet.place.country_code);\r\n      return accList;\r\n    }, []);\r\n\r\n    const cities = list.reduce((accList, tweet) => {\r\n      if (tweet.place && !accList.includes(tweet.place.name))\r\n        accList.push(tweet.place.name);\r\n      return accList;\r\n    }, []);\r\n\r\n    return { countryList: countries, cityList: cities };\r\n  }, [list]);\r\n\r\n  const applyFilter = () => {\r\n    const { minDate, maxDate, minTime, maxTime, geoloc, country, city } = filters;\r\n    const filteredTweets = list.filter((tweet) => {\r\n      const timestamp = new Date(tweet.created_at);\r\n      const minTimestamp = minDate && new Date(`${minDate} ${minTime || '00:00'}`);\r\n      const maxTimestamp = maxDate && new Date(`${maxDate} ${maxTime || '23:59'}`);\r\n      const isGeolocalized = Boolean(tweet.coordinates || tweet.place);\r\n      const cityName = (tweet.place || {}).name;\r\n      const countryCode = (tweet.place || {}).country_code;\r\n\r\n      return (\r\n        (!minTimestamp ? true : timestamp >= minTimestamp) &&\r\n        (!maxTimestamp ? true : timestamp <= maxTimestamp) &&\r\n        (geoloc === undefined ? true : geoloc === isGeolocalized) &&\r\n        (!country ? true : country === countryCode) &&\r\n        (!city ? true : city === cityName)\r\n      );\r\n    });\r\n\r\n    setFilteredList(filteredTweets);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"space-evenly\">\r\n        <InputField\r\n          type=\"date\"\r\n          label=\"Min date\"\r\n          fieldName=\"minDate\"\r\n          value={filters.minDate}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n        <InputField\r\n          type=\"date\"\r\n          label=\"Max date\"\r\n          fieldName=\"maxDate\"\r\n          value={filters.maxDate}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n        <InputField\r\n          type=\"time\"\r\n          label=\"Min time\"\r\n          fieldName=\"minTime\"\r\n          value={filters.minTime}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n        <InputField\r\n          type=\"time\"\r\n          label=\"Max time\"\r\n          fieldName=\"maxTime\"\r\n          value={filters.maxTime}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"space-evenly\">\r\n        <SelectField\r\n          id=\"geoloc\"\r\n          label=\"Geolocalization\"\r\n          value={filters.geoloc}\r\n          onChange={onChangeFilter}\r\n        >\r\n          <MenuItem value={true}>Yes</MenuItem>\r\n          <MenuItem value={false}>No</MenuItem>\r\n        </SelectField>\r\n\r\n        <SelectField\r\n          id=\"country\"\r\n          label=\"Country\"\r\n          value={filters.country}\r\n          onChange={onChangeFilter}\r\n        >\r\n          {countryList.map((element, index) => {\r\n            return (\r\n              <MenuItem key={index} value={element}>\r\n                {element}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </SelectField>\r\n\r\n        <SelectField\r\n          id=\"city\"\r\n          label=\"City\"\r\n          value={filters.city}\r\n          onChange={onChangeFilter}\r\n        >\r\n          {cityList.map((element, index) => {\r\n            return (\r\n              <MenuItem key={index} value={element}>\r\n                {element}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </SelectField>\r\n      </Grid>\r\n      <Grid container justify=\"space-evenly\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={applyFilter}\r\n          className={button}\r\n          disabled={!Object.values(filters).length}\r\n        >\r\n          Apply\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setFilters({});\r\n            setFilteredList(list);\r\n          }}\r\n          className={button}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { RadarChart, PolarGrid, PolarAngleAxis, Tooltip, Radar } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  areachart: {\r\n    '& tspan': {\r\n      fill: theme.palette.type === 'dark' ? 'white' : 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AreaChart = ({ data }) => {\r\n  const { areachart } = useStyles();\r\n  return (\r\n    <RadarChart width={700} height={300} data={data} className={areachart}>\r\n      <PolarGrid />\r\n      <PolarAngleAxis dataKey=\"subject\" />\r\n      <Tooltip />\r\n      <Radar dataKey=\"count\" stroke=\"#1da1f2\" fill=\"#1da1f2\" fillOpacity={0.6} />\r\n    </RadarChart>\r\n  );\r\n};\r\n\r\nexport default AreaChart;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  barchart: {\r\n    '& tspan': {\r\n      fill: theme.palette.type === 'dark' ? 'white' : 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst BarChart = ({ data }) => {\r\n  const { barchart } = useStyles();\r\n  return (\r\n    <AreaChart width={700} height={300} data={data} className={barchart}>\r\n      <Area type=\"monotone\" dataKey=\"count\" stroke=\"#1da1f2\" fill=\"#1da1f2\" />\r\n      <CartesianGrid strokeDasharray=\"1 1\" />\r\n      <XAxis dataKey=\"value\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n    </AreaChart>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from 'react';\r\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport { PieChart, Pie, Tooltip, Legend, Cell } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  piechart: {\r\n    '& .recharts-legend-item-text': {\r\n      color: theme.palette.type === 'dark' ? 'white' : 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PieGraph = ({ data, colors }) => {\r\n  const { piechart } = useStyles();\r\n  const fillColor = useMediaQuery('(prefers-color-scheme: dark)') ? '#ffffff' : 'black';\r\n\r\n  return (\r\n    <PieChart width={700} height={300} className={piechart}>\r\n      <Pie dataKey=\"count\" data={data} outerRadius={80} label={{ fill: fillColor }}>\r\n        {data.map((voice, index) => (\r\n          <Cell name={voice.name} key={voice.name} fill={colors[index]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip />\r\n      <Legend verticalAlign=\"top\" height={36} iconSize={30} iconType=\"circle\" />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default PieGraph;\r\n","import React from 'react';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: \"max-content\",\r\n    width: \"70%\",\r\n    height: \"auto\",\r\n    marginRight: \"20%\",\r\n    marginLeft: \"20%\",\r\n    marginBottom: 60\r\n  }\r\n}));\r\n\r\nconst TableChart = ({ data, header }) => {\r\n  const { table } = useStyles();\r\n  data.sort((prev, next) => next.count - prev.count);\r\n\r\n  return (\r\n    <Table stickyHeader className={table}>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell align=\"center\">{header[0]}</TableCell>\r\n          <TableCell align=\"center\">{header[1]}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n\r\n      <TableBody>\r\n        {data.map((voice) => (\r\n          <TableRow key={voice.name}>\r\n            <TableCell align=\"center\">{voice.name}</TableCell>\r\n            <TableCell align=\"center\">{voice.count || 'No data avaiable'}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableChart;\r\n","import React, { useMemo } from 'react';\r\nimport { Grid, Typography, makeStyles } from '@material-ui/core';\r\n\r\nimport { AreaChart, BarChart, PieChart, TableChart } from './GraphSnippets';\r\n\r\nconst statsTemplate = {\r\n  hours: [\r\n    { name: '00', value: '0', count: 0 },\r\n    { name: '01', value: '1', count: 0 },\r\n    { name: '02', value: '2', count: 0 },\r\n    { name: '03', value: '3', count: 0 },\r\n    { name: '04', value: '4', count: 0 },\r\n    { name: '05', value: '5', count: 0 },\r\n    { name: '06', value: '6', count: 0 },\r\n    { name: '07', value: '7', count: 0 },\r\n    { name: '08', value: '8', count: 0 },\r\n    { name: '09', value: '9', count: 0 },\r\n    { name: '10', value: '10', count: 0 },\r\n    { name: '11', value: '11', count: 0 },\r\n    { name: '12', value: '12', count: 0 },\r\n    { name: '13', value: '13', count: 0 },\r\n    { name: '14', value: '14', count: 0 },\r\n    { name: '15', value: '15', count: 0 },\r\n    { name: '16', value: '16', count: 0 },\r\n    { name: '17', value: '17', count: 0 },\r\n    { name: '18', value: '18', count: 0 },\r\n    { name: '19', value: '19', count: 0 },\r\n    { name: '20', value: '20', count: 0 },\r\n    { name: '21', value: '21', count: 0 },\r\n    { name: '22', value: '22', count: 0 },\r\n    { name: '23', value: '23', count: 0 },\r\n  ],\r\n  days: [\r\n    { name: 'Sun', subject: 'Sunday', count: 0 },\r\n    { name: 'Mon', subject: 'Monday', count: 0 },\r\n    { name: 'Tue', subject: 'Tuesday', count: 0 },\r\n    { name: 'Wed', subject: 'Wednesday', count: 0 },\r\n    { name: 'Thu', subject: 'Thursday', count: 0 },\r\n    { name: 'Fri', subject: 'Friday', count: 0 },\r\n    { name: 'Sat', subject: 'Saturday', count: 0 },\r\n  ],\r\n  geolocalization: [\r\n    { name: 'No', count: 0 },\r\n    { name: 'Yes', count: 0 },\r\n  ],\r\n  retweet: [\r\n    { name: 'No', count: 0 },\r\n    { name: 'Yes', count: 0 },\r\n  ],\r\n  cities: [],\r\n  countries: [],\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxHeight: 800,\r\n    overflowY: 'auto',\r\n    scrollbarWidth: 'none',\r\n  },\r\n});\r\n\r\nconst Graphs = ({ list }) => {\r\n  const classes = useStyles();\r\n\r\n  const updatedStats = useMemo(() => {\r\n    const stats = JSON.parse(JSON.stringify(statsTemplate));\r\n\r\n    const updateStats = (next) => {\r\n      const { hours, days, geolocalization, retweet, cities, countries } = stats;\r\n      hours[next.creationHour].count++;\r\n      days[next.creationDay].count++;\r\n      geolocalization[Number(next.isGeolocalized)].count++;\r\n      retweet[Number(next.isRetweeted)].count++;\r\n\r\n      const cityToUpdate = cities.find((city) => city.name === next.cityName);\r\n      const { countryCode, countryName } = next.country;\r\n      const countryToUpdate = countries.find((country) => country.code === countryCode);\r\n\r\n      if (cityToUpdate) cityToUpdate.count++;\r\n      else cities.push({ name: next.cityName, count: 1 });\r\n\r\n      if (countryToUpdate) countryToUpdate.count++;\r\n      else\r\n        countries.push({\r\n          name: countryName,\r\n          code: countryCode,\r\n          count: 1,\r\n        });\r\n    };\r\n\r\n    list.forEach((tweet) => {\r\n      const timestamp = new Date(tweet.created_at);\r\n      const creationHour = timestamp.getHours();\r\n      const creationDay = timestamp.getDay();\r\n      const isGeolocalized = Boolean(tweet.coordinates || tweet.place);\r\n      const isRetweeted = Boolean(tweet.retweeted_status);\r\n      const cityName = (tweet.place || {}).name || 'Not known';\r\n      const countryName = (tweet.place || {}).country || 'Not known';\r\n      const countryCode = (tweet.place || {}).country_code || 'Not known';\r\n      updateStats({\r\n        creationHour,\r\n        creationDay,\r\n        isGeolocalized,\r\n        isRetweeted,\r\n        cityName,\r\n        country: { countryName, countryCode },\r\n      });\r\n    });\r\n\r\n    return stats;\r\n  }, [list]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets volume by hour\r\n        </Typography>\r\n        <BarChart data={updatedStats.hours} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets volume by day\r\n        </Typography>\r\n        <AreaChart data={updatedStats.days} />\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          % of geolocalized tweets\r\n        </Typography>\r\n        <PieChart data={updatedStats.geolocalization} colors={['#1da1f2', '#00C49F']} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          % of retweeted tweets\r\n        </Typography>\r\n        <PieChart data={updatedStats.retweet} colors={['#1da1f2', '#00C49F']} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets country origin\r\n        </Typography>\r\n        <TableChart data={updatedStats.countries} header={['Country', 'Tweet No.']} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets city origin\r\n        </Typography>\r\n        <TableChart data={updatedStats.cities} header={['City', 'Tweet No.']} />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { Tabs, Tab, Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n  },\r\n  tabs: {\r\n    flexShrink: 0,\r\n  },\r\n  panelsContainer: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  panel: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst InsightTabs = ({ children }) => {\r\n  const { root, tabs, panel, panelsContainer } = useStyles();\r\n  const [focusedTab, setFocused] = useState(0);\r\n\r\n  const panels = useMemo(\r\n    () =>\r\n      children.map((child, index) => (\r\n        <Box\r\n          key={index}\r\n          className={panel}\r\n          style={{ zIndex: focusedTab !== index ? -1 : 0 }}\r\n        >\r\n          {React.cloneElement(child)}\r\n        </Box>\r\n      )),\r\n    [children, focusedTab, panel]\r\n  );\r\n\r\n  return (\r\n    <div className={root}>\r\n      <Tabs\r\n        className={tabs}\r\n        value={focusedTab}\r\n        onChange={(_, newVal) => setFocused(newVal)}\r\n        textColor=\"secondary\"\r\n      >\r\n        {children.map((child, index) => (\r\n          <Tab value={index} key={index} label={child.props.tabName} />\r\n        ))}\r\n      </Tabs>\r\n      <div className={panelsContainer}>{panels}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsightTabs;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\n\r\nimport { Grid, Typography, makeStyles } from '@material-ui/core';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nimport {\r\n  BASE_URL,\r\n  GEO_FILTER,\r\n  GET_IDS,\r\n  REQUEST_TOKEN,\r\n  SETTINGS,\r\n  FABsDesc,\r\n} from '../constants';\r\nimport { ShowDialogIcon, StreamParams, Map, InsightTabs, TweetList, WordCloud } from '.';\r\nimport { NotifySettings, ScheduleTweet, Filters, Graphs } from '.';\r\nimport { UserError } from './AlertWindow';\r\n\r\nimport { MAP_ID } from '../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    top: 0,\r\n    left: 0,\r\n    margin: 0,\r\n    padding: 0,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: theme.palette.background.default,\r\n    overflow: 'hidden',\r\n  },\r\n  header: {\r\n    height: '15%',\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  mainContainer: {\r\n    height: '85%',\r\n  },\r\n  sideContainer: {\r\n    height: '100%',\r\n    padding: theme.spacing(1),\r\n    '& #map, & .leaflet-container': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  settingsIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst socket = io(BASE_URL, {\r\n  transports: ['websocket'],\r\n  path: '/socket', // needed for cors in dev\r\n});\r\n\r\nfunction getCookieValue(a) {\r\n  const b = document.cookie.match('(^|;)\\\\s*' + a + '\\\\s*=\\\\s*([^;]+)');\r\n  return b ? b.pop() : null;\r\n}\r\n\r\nconst COORDINATE_RE = /^-?[\\d]{1,3}[.][\\d]+$/;\r\n\r\nconst MainContainer = () => {\r\n  const launch = useErrorHandler();\r\n  const { paper, header, mainContainer, sideContainer, settingsIcon } = useStyles();\r\n  // To set the id of the current stream\r\n  const [streamId, setStreamId] = useState();\r\n  const [tweets, setTweets] = useState([]);\r\n  const [tweetsFiltered, setTweetsFiltered] = useState(tweets);\r\n\r\n  const [coords, setCoords] = useState({\r\n    ne: {\r\n      lat: '',\r\n      lng: '',\r\n    },\r\n    sw: {\r\n      lat: '',\r\n      lng: '',\r\n    },\r\n  });\r\n  const [params, setParams] = useState({\r\n    track: '', // hashtag\r\n    follow: '', // user\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTweetsFiltered(tweets);\r\n  }, [tweets]);\r\n\r\n  //cookie\r\n  useEffect(() => {\r\n    const fetchSettings = async (id) => {\r\n      try {\r\n        const res = await axios.get(`${SETTINGS}?streamId=${id}`);\r\n        const settings = res.data;\r\n\r\n        if (settings.locations) {\r\n          const coordinates = settings.locations.split(',');\r\n          setCoords({\r\n            ne: {\r\n              lat: coordinates[3],\r\n              lng: coordinates[2],\r\n            },\r\n            sw: {\r\n              lat: coordinates[1],\r\n              lng: coordinates[0],\r\n            },\r\n          });\r\n        }\r\n\r\n        if (settings.track) {\r\n          setParams({ track: settings.track });\r\n        }\r\n\r\n        if (settings.follow) {\r\n          setParams({ follow: settings.follow });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const oldStreamId = getCookieValue('streamId');\r\n\r\n    if (oldStreamId) {\r\n      setStreamId(oldStreamId);\r\n      fetchSettings(oldStreamId);\r\n      socket.emit('attach', { streamId: oldStreamId });\r\n      socket.on('tweet', (tweet) => {\r\n        setTweets((prevTweets) => [...prevTweets, tweet]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const startStream = async ({ coords, params }) => {\r\n    let streamParameters; // in OR\r\n    let constraints; // in AND, AFTER collection\r\n    let follow = undefined;\r\n    if (params.follow) {\r\n      try {\r\n        // pray that it is formatted correctly\r\n        const res = await axios.get(`${GET_IDS}?names=${params.follow}`);\r\n        follow = res.data;\r\n      } catch (err) {\r\n        launch(UserError(\"One of the users you asked for doesn't exist!\"));\r\n        return;\r\n      }\r\n    }\r\n\r\n    // if coordinates were given, they have the priority, and after we'll check everything else\r\n    if (coords) {\r\n      streamParameters = {\r\n        locations: `${coords.sw.lng},${coords.sw.lat},${coords.ne.lng},${coords.ne.lat}`,\r\n      };\r\n      constraints = { ...params, follow };\r\n    }\r\n    // if a username is given, we want to know everything he's tweeted, and then select on hashtag\r\n    else if (params.follow) {\r\n      streamParameters = { follow };\r\n      constraints = { track: params.track };\r\n    }\r\n    // otherwise, we only select based on hashtag\r\n    else if (params.track) {\r\n      streamParameters = {\r\n        track: params.track,\r\n      };\r\n      constraints = {};\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        GEO_FILTER,\r\n        {\r\n          streamParameters,\r\n          constraints,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      setStreamId(res.data);\r\n      socket.emit('attach', { streamId: res.data });\r\n      socket.on('tweet', (tweet) => {\r\n        setTweets((prevTweets) => [...prevTweets, tweet]);\r\n      });\r\n      socket.on('error', (err) => {\r\n        if (err.source && err.source === 'Exceeded connection limit for user') {\r\n          launch(UserError('Exceeded connection limit'));\r\n        }\r\n      });\r\n    } catch (err) {\r\n      launch(UserError(\"Couldn't start stream on server, please retry!\"));\r\n    }\r\n  };\r\n\r\n  const stopStream = async () => {\r\n    try {\r\n      await axios.delete(GEO_FILTER, {\r\n        data: { id: streamId },\r\n        headers: { Authorization: '***' },\r\n        withCredentials: true,\r\n      });\r\n      setStreamId(null);\r\n      socket.off('tweet');\r\n      socket.off('error');\r\n      document.cookie = 'streamId=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n    } catch (err) {\r\n      launch(UserError(\"Couldn't stop stream on the server, please retry!\"));\r\n    }\r\n  };\r\n\r\n  const handleAuthentication = async () => {\r\n    try {\r\n      const res = await axios.get(REQUEST_TOKEN);\r\n      window.location.replace(\r\n        `https://api.twitter.com/oauth/authenticate?oauth_token=${res.data.token}`\r\n      );\r\n    } catch (err) {\r\n      console.error(err.response);\r\n    }\r\n  };\r\n\r\n  const onAddRect = useCallback(\r\n    (nelat, nelng, swlat, swlng) =>\r\n      setCoords({\r\n        ne: { lat: nelat, lng: nelng },\r\n        sw: { lat: swlat, lng: swlng },\r\n      }),\r\n    []\r\n  );\r\n\r\n  const handleParamsChange = (e) =>\r\n    setParams({ ...params, [e.target.name]: e.target.value });\r\n\r\n  const handleStart = () => {\r\n    // get all values flattened\r\n    const values = Object.values(coords)\r\n      .map((value) => [value.lat, value.lng])\r\n      .flat();\r\n    // Start a not geolocalized\r\n    if (values.every((value) => value === '')) {\r\n      startStream({ coords: '', params });\r\n    }\r\n    // Start a geolocalized\r\n    else if (values.every((value) => value && COORDINATE_RE.test(value)))\r\n      startStream({ coords, params });\r\n    else {\r\n      const onReset = () =>\r\n        setCoords({\r\n          ne: {\r\n            lat: '',\r\n            lng: '',\r\n          },\r\n          sw: {\r\n            lat: '',\r\n            lng: '',\r\n          },\r\n        });\r\n      launch(UserError('There is an error with your geolocalized box', onReset));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={paper}>\r\n      <Grid container className={header} justify=\"space-around\" alignItems=\"center\">\r\n        {/* Box with stream params */}\r\n        <Grid item xs={4}>\r\n          <ShowDialogIcon\r\n            icon={<Settings className={settingsIcon} />}\r\n            name={!streamId ? 'Start' : 'Running...'}\r\n            desc={FABsDesc['params']}\r\n          >\r\n            <StreamParams\r\n              activeStream={streamId}\r\n              params={params}\r\n              onStart={handleStart}\r\n              onStop={stopStream}\r\n              onParamChange={handleParamsChange}\r\n            />\r\n          </ShowDialogIcon>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography color=\"primary\" variant=\"h3\" align=\"center\" justify=\"center\">\r\n            TWITTER TRACKER\r\n            <Typography>{tweets.length} tweets collected</Typography>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item container xs={4} justify=\"flex-end\">\r\n          <ShowDialogIcon\r\n            icon={<SearchIcon />}\r\n            iconOnly\r\n            name=\"Filter tweets\"\r\n            desc={FABsDesc['filter']}\r\n          >\r\n            <Filters list={tweets} setFilteredList={setTweetsFiltered} />\r\n          </ShowDialogIcon>\r\n          <ShowDialogIcon\r\n            icon={<AlarmIcon />}\r\n            iconOnly\r\n            name=\"Scheduled tweet\"\r\n            desc={FABsDesc['schedule']}\r\n          >\r\n            <ScheduleTweet handleAuth={handleAuthentication} />\r\n          </ShowDialogIcon>\r\n          <ShowDialogIcon\r\n            icon={<EmailIcon />}\r\n            iconOnly\r\n            name=\"E-mail notification\"\r\n            desc={FABsDesc['email']}\r\n            disabled={!streamId}\r\n          >\r\n            <NotifySettings streamId={streamId} />\r\n          </ShowDialogIcon>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Grid layout for Map and InsightTabs */}\r\n      <Grid container className={mainContainer}>\r\n        <Grid item xs={6} className={sideContainer}>\r\n          <div id={MAP_ID}>\r\n            <Map\r\n              tweetsList={tweetsFiltered}\r\n              setCoordinates={onAddRect}\r\n              showToolbars={!streamId}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6} className={sideContainer}>\r\n          <InsightTabs>\r\n            <TweetList list={tweetsFiltered} setList={setTweets} tabName=\"Tweet List\" />\r\n            <WordCloud list={tweetsFiltered} tabName=\"Wordcloud\" />\r\n            <Graphs list={tweetsFiltered} tabName=\"Graphs\" />\r\n          </InsightTabs>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","export default __webpack_public_path__ + \"static/media/twitter-marker.9ed4db7e.png\";","import { useCallback, useEffect, useRef } from 'react';\r\nimport leaflet, { Control } from 'leaflet';\r\n// How is possible that this is not used but the component fails if this is not imported\r\nimport Draw from 'leaflet-draw';\r\nimport {\r\n  useLeafletContext,\r\n  createElementHook,\r\n  createLeafComponent,\r\n} from '@react-leaflet/core';\r\n\r\nconst createControlComponent = (createInstance) => {\r\n  function createElement(props, context) {\r\n    const { layerContainer } = context;\r\n    const { position } = props;\r\n    const options = {\r\n      position,\r\n      edit: {\r\n        featureGroup: layerContainer,\r\n      },\r\n    };\r\n\r\n    return { instance: createInstance(options), context };\r\n  }\r\n  const useElement = createElementHook(createElement);\r\n  const useControl = createControlHook(useElement);\r\n  return createLeafComponent(useControl);\r\n};\r\n\r\nconst createControlHook = (useElement) => {\r\n  return function useLeafletControl(props) {\r\n    const context = useLeafletContext();\r\n    const elementRef = useElement(props, context);\r\n    const { instance } = elementRef.current;\r\n    const positionRef = useRef(props.position);\r\n    const { position, onCreated, onEdit, onDeleted } = props;\r\n\r\n    const onDrawCreate = useCallback(\r\n      (e) => {\r\n        context.layerContainer.addLayer(e.layer);\r\n        onCreated(e);\r\n      },\r\n      [context.layerContainer, onCreated]\r\n    );\r\n\r\n    useEffect(\r\n      function addControl() {\r\n        instance.addTo(context.map);\r\n        context.map.on(leaflet.Draw.Event.CREATED, onDrawCreate);\r\n\r\n        if (onDeleted) {\r\n          context.map.on(leaflet.Draw.Event.DELETED, onDeleted);\r\n        }\r\n\r\n        if (onEdit) {\r\n          context.map.on(leaflet.Draw.Event.EDITRESIZE, onEdit);\r\n          context.map.on(leaflet.Draw.Event.EDITMOVE, onEdit);\r\n        }\r\n\r\n        return function removeControl() {\r\n          context.map.off(leaflet.Draw.Event.CREATED, onDrawCreate);\r\n\r\n          if (onDeleted) {\r\n            context.map.off(leaflet.Draw.Event.DELETED, onDeleted);\r\n          }\r\n\r\n          if (onEdit) {\r\n            context.map.off(leaflet.Draw.Event.EDITRESIZE, onEdit);\r\n            context.map.off(leaflet.Draw.Event.EDITMOVE, onEdit);\r\n          }\r\n\r\n          instance.remove();\r\n        };\r\n      },\r\n      [context.map, instance, onDrawCreate, onDeleted, onEdit]\r\n    );\r\n\r\n    useEffect(\r\n      function updateControl() {\r\n        if (position != null && position !== positionRef.current) {\r\n          instance.setPosition(position);\r\n          positionRef.current = position;\r\n        }\r\n      },\r\n      [instance, position]\r\n    );\r\n\r\n    return elementRef;\r\n  };\r\n};\r\n\r\nexport const DrawRectangleControl = createControlComponent(\r\n  (options) =>\r\n    new Control.Draw({\r\n      ...options,\r\n      draw: {\r\n        polyline: false,\r\n        polygon: false,\r\n        rectangle: true,\r\n        circle: false,\r\n        marker: false,\r\n        circlemarker: false,\r\n      },\r\n      edit: {\r\n        ...options.edit,\r\n        edit: false,\r\n        remove: false,\r\n      },\r\n    })\r\n);\r\n\r\nexport const EditOnlyControl = createControlComponent(\r\n  (options) =>\r\n    new Control.Draw({\r\n      ...options,\r\n      draw: {\r\n        polyline: false,\r\n        polygon: false,\r\n        rectangle: false,\r\n        circle: false,\r\n        marker: false,\r\n        circlemarker: false,\r\n      },\r\n    })\r\n);\r\n","import React, { useMemo, useEffect, useState, useCallback } from 'react';\r\nimport leaflet from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup, FeatureGroup } from 'react-leaflet';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport markerImg from '../assets/twitter-marker.png';\r\nimport { EditOnlyControl, DrawRectangleControl } from './EditControl';\r\n\r\nconst defaultPosition = [44.494704, 11.342005];\r\nconst THRESHOLD = 0.000001;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    maxHeight: '300px',\r\n    overflow: 'auto',\r\n    '& .MuiListItem-gutters': {\r\n      padding: '0 10px',\r\n    },\r\n  },\r\n  popup: {\r\n    '& .leaflet-popup-content': {\r\n      margin: '0',\r\n      padding: '0',\r\n    },\r\n  },\r\n  listSecondary: {\r\n    '& p': {\r\n      margin: '0',\r\n      color: 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst getPic = (tweet) =>\r\n  tweet.images.length === 0 ? tweet.user.profile_image_url : tweet.images[0].media_url;\r\n\r\nconst normalizeList = (tweets) =>\r\n  tweets\r\n    .map((tweet) => {\r\n      const media = (tweet.extended_entities && tweet.extended_entities.media) || [];\r\n      const normalized = {\r\n        id: tweet.id_str,\r\n        text: tweet.text,\r\n        user: tweet.user,\r\n        images: media.filter((item) => item.type === 'photo'),\r\n      };\r\n\r\n      // Accurate coordinates (a point)\r\n      if (tweet.coordinates && tweet.coordinates.type === 'Point') {\r\n        return {\r\n          ...normalized,\r\n          coordinates: tweet.coordinates.coordinates,\r\n        };\r\n      }\r\n\r\n      // Approximated coordinates (a square/rectangle)\r\n      if (tweet.place && tweet.place.bounding_box) {\r\n        // Coordinates vector is structured like this [[[BL, TL, TR, BR]]]\r\n        const bottomLeftCorner = tweet.place.bounding_box.coordinates[0][0];\r\n        const topRightCorner = tweet.place.bounding_box.coordinates[0][2];\r\n        return {\r\n          ...normalized,\r\n          coordinates: [\r\n            (bottomLeftCorner[0] + topRightCorner[0]) / 2,\r\n            (bottomLeftCorner[1] + topRightCorner[1]) / 2,\r\n          ],\r\n        };\r\n      }\r\n\r\n      return null;\r\n    })\r\n    .filter(Boolean)\r\n    .reduce((groups, tweet) => {\r\n      const keys = Object.keys(groups).map((coords) => coords.split(',').map(Number));\r\n      const key = keys.find(\r\n        (coords) => Math.abs(coords[0] - tweet.coordinates[0]) <= THRESHOLD\r\n      );\r\n\r\n      if (key) {\r\n        groups[key].push(tweet);\r\n      } else {\r\n        groups[tweet.coordinates.join(',')] = [tweet];\r\n      }\r\n\r\n      return groups;\r\n    }, {});\r\n\r\nconst Map = ({ tweetsList, setCoordinates, showToolbars }) => {\r\n  const classes = useStyles();\r\n  const [bboxRect, setBBoxRect] = useState();\r\n  const markers = useMemo(\r\n    () =>\r\n      Object.entries(normalizeList(tweetsList)).map(([coords, tweets], index) => (\r\n        <Marker\r\n          position={coords.split(',').reverse()}\r\n          key={index}\r\n          icon={\r\n            new leaflet.Icon({\r\n              iconUrl: tweets.length > 1 ? markerImg : getPic(tweets[0]),\r\n              popupAnchor: [0, -15],\r\n              iconSize:\r\n                tweets.length > 1\r\n                  ? new leaflet.Point(22.8, 35.8)\r\n                  : new leaflet.Point(30, 30),\r\n            })\r\n          }\r\n        >\r\n          <Popup className={classes.popup}>\r\n            <List className={classes.list}>\r\n              {tweets.map((tweet) => (\r\n                <ListItem key={tweet.id} alignItems=\"flex-start\">\r\n                  <ListItemAvatar>\r\n                    <Avatar alt={tweet.user.name} src={tweet.user.profile_image_url} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    className={classes.listSecondary}\r\n                    primary={tweet.user.name}\r\n                    secondary={tweet.text}\r\n                  />\r\n                  <div>\r\n                    {tweet.images.map((image, tweetIndex) => (\r\n                      <img\r\n                        key={tweetIndex}\r\n                        src={image.media_url}\r\n                        alt=\"User's shared content\"\r\n                        width=\"80\"\r\n                        style={{ display: 'block' }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Popup>\r\n        </Marker>\r\n      )),\r\n    [tweetsList, classes]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (bboxRect) {\r\n      const { _northEast, _southWest } = bboxRect;\r\n      setCoordinates(_northEast.lat, _northEast.lng, _southWest.lat, _southWest.lng);\r\n    } else {\r\n      setCoordinates('', '', '', '');\r\n    }\r\n  }, [bboxRect, setCoordinates]);\r\n\r\n  const onEdit = useCallback((evt) => {\r\n    setBBoxRect(evt.layer._bounds);\r\n  }, []);\r\n\r\n  const onDeleted = useCallback((evt) => {\r\n    const layers = evt.layers.getLayers();\r\n    if (layers.length > 0) {\r\n      setBBoxRect(null);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={defaultPosition} zoom={9} scrollWheelZoom={true}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {markers}\r\n      <FeatureGroup>\r\n        {showToolbars &&\r\n          (!bboxRect ? (\r\n            <DrawRectangleControl position=\"topleft\" onCreated={onEdit} />\r\n          ) : (\r\n            <EditOnlyControl position=\"topleft\" onEdit={onEdit} onDeleted={onDeleted} />\r\n          ))}\r\n      </FeatureGroup>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Typography, Slider, Grid, Button, makeStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nimport { InputField } from './InputComponent';\r\nimport { NOTIFICATION } from '../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tresholdSlider: {\r\n    width: 70,\r\n  },\r\n  submitButton: {\r\n    margin: 20,\r\n    width: 100,\r\n    fontWeight: 800,\r\n    color: 'white',\r\n    backgroundColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NotifySettings = ({ streamId }) => {\r\n  const { tresholdSlider, submitButton } = useStyles();\r\n  const [email, setEmail] = useState(undefined);\r\n  const [treshold, setTreshold] = useState(100);\r\n  // const [mailSent, setSent] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (!mailSent && email && count >= treshold) {\r\n  //     setSent(true);\r\n  //     axios\r\n  //       .put(NOTIFICATION, { address: email, count: count })\r\n  //       .catch((_) => setSent(false));\r\n  //   }\r\n  // }, [mailSent, email, count, treshold]);\r\n\r\n  const confirm = useCallback(async () => {\r\n    try {\r\n      await axios.put(NOTIFICATION, { streamId, email, treshold });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [streamId, email, treshold]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={4}>\r\n        <InputField label=\"e-mail\" handler={(event) => setEmail(event.target.value)} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography gutterBottom>Treshold</Typography>\r\n        <Slider\r\n          className={tresholdSlider}\r\n          value={treshold}\r\n          onChange={(_, newT) => setTreshold(newT)}\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={1000}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={submitButton}\r\n          onClick={confirm}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotifySettings;\r\n","import React, { useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  TextField,\r\n  makeStyles,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useUser } from '../context/UserContext';\r\nimport { MAP_ID, WORDCLOUD_ID, SEND_TWEET } from '../constants';\r\n\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  status: { float: 'right', fontWeight: 'normal' },\r\n  statusText: {},\r\n  stopped: {\r\n    backgroundColor: '#cccccc',\r\n    borderRadius: '5px',\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1)}px`,\r\n    color: 'black',\r\n  },\r\n  running: {\r\n    backgroundColor: '#86e038',\r\n    borderRadius: '5px',\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1)}px`,\r\n    color: 'black',\r\n  },\r\n  leftButton: {\r\n    flexGrow: '1 0 0',\r\n  },\r\n}));\r\n\r\nconst NUMBER_RE = /^[0-9|.]+$/;\r\nconst CONFIRM_RE = /^[0-9]+(\\.[0-9]+)?$/;\r\nconst H_TO_MS = (hours) => Math.floor(hours * 60 * 60 * 1000);\r\n\r\n// to keep it in two components, scheduleTweet check if user is authenticated,\r\n// and if not calls handleAuth to complete authentication.\r\nconst ScheduleTweet = ({ handleAuth }) => {\r\n  const { authProps } = useUser();\r\n  const [sent, setSent] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [timer, setTimer] = useState(undefined);\r\n  const [hours, setHours] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [check, setCheck] = useState({ [MAP_ID]: false, [WORDCLOUD_ID]: false });\r\n  const { map, wordcloud } = check;\r\n  const classes = useStyles();\r\n  const intervalMS = useMemo(() => H_TO_MS(hours), [hours]);\r\n  const selectedComponents = useMemo(\r\n    () => Object.keys(check).filter((key) => check[key]),\r\n    [check]\r\n  );\r\n\r\n  const handleCheck = (evt) => {\r\n    setCheck((prev) => ({ ...prev, [evt.target.name]: evt.target.checked }));\r\n  };\r\n\r\n  const handleInterval = (e) => {\r\n    const input = e.target.value;\r\n    if (NUMBER_RE.test(input) || input === '') {\r\n      setHours(input);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      const screenshots = await Promise.all(\r\n        selectedComponents.map((id) =>\r\n          html2canvas(document.getElementById(id), {\r\n            useCORS: true,\r\n            backgroundColor: null,\r\n          })\r\n        )\r\n      );\r\n      const media = screenshots.map((canvas) => {\r\n        const dataUrl = canvas.toDataURL();\r\n        return dataUrl.substring(dataUrl.lastIndexOf(',') + 1);\r\n      });\r\n      const msg = {\r\n        text: text,\r\n        media,\r\n      };\r\n      await axios.post(SEND_TWEET, { msg, authProps });\r\n      setSent(true);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(err.response.data.message);\r\n      } else {\r\n        console.error(err.message);\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    if (CONFIRM_RE.test(hours)) {\r\n      setTimer(setInterval(handleSend, intervalMS));\r\n      // check low amount;\r\n      if (Number(hours) < 0.05) setError('careful with low numbers, twitter is garbage');\r\n    } else setError(\"that's not a number cunt\");\r\n  };\r\n  const cleanAll = () => {\r\n    clearInterval(timer);\r\n    setTimer(undefined);\r\n    setSent(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!authProps ? (\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleAuth}>\r\n          AUTHENTICATE\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <TextField\r\n            helperText={error || 'how many hours should we wait?'}\r\n            error={!!error}\r\n            autoFocus\r\n            value={hours}\r\n            onChange={handleInterval}\r\n            label=\"Interval between tweets\"\r\n            id=\"tweet-interval\"\r\n            disabled={!!timer}\r\n          />\r\n          <span className={classes.status}>\r\n            <Typography variant=\"button\"> status: </Typography>\r\n            {!timer ? (\r\n              <span className={classes.stopped}>stopped</span>\r\n            ) : (\r\n              <span className={classes.running}>running</span>\r\n            )}\r\n          </span>\r\n          <TextField\r\n            multiline\r\n            value={text}\r\n            onChange={(event) => {\r\n              if (event.target.value.length <= 140) setText(event.target.value);\r\n            }}\r\n            helperText={`${text.length}/${140}`}\r\n            margin=\"dense\"\r\n            id=\"tweet-text\"\r\n            label=\"Tweet Text\"\r\n            type=\"text\"\r\n            disabled={!!timer}\r\n            fullWidth\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={map}\r\n                name={MAP_ID}\r\n                color=\"primary\"\r\n                onChange={handleCheck}\r\n                disabled={!!timer}\r\n              />\r\n            }\r\n            label=\"Map\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={wordcloud}\r\n                name={WORDCLOUD_ID}\r\n                color=\"primary\"\r\n                onChange={handleCheck}\r\n                disabled={!!timer}\r\n              />\r\n            }\r\n            label=\"Word cloud\"\r\n          />\r\n          {sent && <div>Seems your tweet went through!</div>}\r\n          <DialogActions>\r\n            <Button onClick={cleanAll} color=\"primary\" disabled={!timer}>\r\n              Change Interval\r\n            </Button>\r\n            <Button className={classes.leftButton} onClick={handleSend} disabled={!text}>\r\n              SEND NOW!\r\n            </Button>\r\n            <Button\r\n              onClick={handleConfirm}\r\n              color=\"primary\"\r\n              disabled={!(hours && text && !timer)}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScheduleTweet;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Fab, Grid, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  fabIcon: {\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n  childrenContainer: {\r\n    height: 'auto',\r\n  },\r\n});\r\n\r\nconst ShowDialogIcon = ({ icon, iconOnly, name, desc, disabled, children }) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const { fabIcon, childrenContainer } = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        className={fabIcon}\r\n        variant={iconOnly ? 'round' : 'extended'}\r\n        onClick={() => setOpen((prev) => !prev)}\r\n        disabled={disabled}\r\n      >\r\n        <>\r\n          {icon}\r\n          {iconOnly || name}\r\n        </>\r\n      </Fab>\r\n      <Dialog open={isOpen} onClose={() => setOpen(false)} maxWidth=\"md\" keepMounted>\r\n        <DialogTitle>{name}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{desc}</DialogContentText>\r\n          <Grid container className={childrenContainer} justify=\"space-evenly\">\r\n            {children}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDialogIcon;\r\n","import React from 'react';\r\nimport { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nimport { InputField } from './InputComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitButton: {\r\n    margin: 10,\r\n    width: 100,\r\n    fontWeight: 800,\r\n    color: 'white',\r\n    backgroundColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.primary.light,\r\n    },\r\n    '&:.MuiButton-text': {\r\n      marginLeft: 70,\r\n    },\r\n  },\r\n}));\r\n\r\nconst StreamParams = ({ activeStream, params, onStart, onStop, onParamChange }) => {\r\n  const { submitButton } = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <InputField\r\n        label=\"Hashtag\"\r\n        fieldName=\"track\"\r\n        text=\"#\"\r\n        value={params.track}\r\n        handler={onParamChange}\r\n      />\r\n      <InputField\r\n        label=\"User\"\r\n        fieldName=\"follow\"\r\n        text=\"@\"\r\n        value={params.follow}\r\n        handler={onParamChange}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={submitButton}\r\n        onClick={activeStream ? onStop : onStart}\r\n        startIcon={activeStream ? <CircularProgress size={20} /> : undefined}\r\n      >\r\n        {activeStream ? 'STOP ' : 'START'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StreamParams;\r\n/* \r\n  ToDo here there are still some cleanings to be done\r\n  There's a strange issue with autocompleton in the input form\r\n*/\r\n","import React, { useMemo } from 'react';\r\nimport { List, Button, Grid, Avatar, Tooltip, makeStyles } from '@material-ui/core';\r\nimport { ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\r\nimport JSZip from 'jszip';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { UserError } from './AlertWindow';\r\n\r\n// The single tweet item in the list\r\nconst Tweet = ({ user, text, extended_tweet, id }) => {\r\n  return (\r\n    <ListItem key={`tcard_id${id}`} alignItems=\"flex-start\">\r\n      <ListItemAvatar>\r\n        <Avatar alt={user.name} src={user.profile_image_url_https} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={user.name}\r\n        secondary={extended_tweet ? extended_tweet.full_text : text}\r\n        primaryTypographyProps={{ variant: 'body1', color: 'secondary' }}\r\n        secondaryTypographyProps={{ align: 'justify', variant: 'body2' }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst triggerDownload = ({ name, url }) => {\r\n  const link = document.createElement('a');\r\n  document.body.appendChild(link);\r\n  link.download = name;\r\n  link.href = url;\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nconst triggerUpload = (onChangeHandler) => {\r\n  const link = document.createElement('input');\r\n  document.body.appendChild(link);\r\n  link.type = 'file';\r\n  link.accept = 'application/json';\r\n  link.onchange = onChangeHandler;\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icons: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  listContainer: {\r\n    maxHeight: 570,\r\n    overflowY: 'auto',\r\n    scrollbarWidth: 'none',\r\n    '&::-webkit-scrollbar': {\r\n      width: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst TweetList = ({ list, setList }) => {\r\n  const classes = useStyles();\r\n  const launch = useErrorHandler();\r\n  const imgFiles = useMemo(\r\n    () =>\r\n      list.reduce((images, tweet) => {\r\n        if (tweet.extended_entities && tweet.extended_entities.media) {\r\n          const medias = tweet.extended_entities.media;\r\n          medias.forEach(({ type, media_url }) => {\r\n            if (type === 'photo')\r\n              images.push({\r\n                file: media_url.substr(media_url.lastIndexOf('/') + 1),\r\n                url: media_url,\r\n              });\r\n          });\r\n        }\r\n\r\n        return images;\r\n      }, []),\r\n    [list]\r\n  );\r\n\r\n  const exportJSON = () => {\r\n    const url =\r\n      'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(list));\r\n    triggerDownload({ name: 'TweetsDump.json', url });\r\n  };\r\n\r\n  const validateJSON = (toValidate) => {\r\n    const isCompliant = toValidate.every((item) => item.id && item.user && item.text);\r\n    if (!isCompliant) {\r\n      throw new Error();\r\n    }\r\n  };\r\n\r\n  const importJSON = (fileEvt) => {\r\n    const uploadedFile = fileEvt.target.files[0];\r\n    if (uploadedFile && uploadedFile.type === 'application/json') {\r\n      const reader = new FileReader();\r\n      // Callback on successfull read\r\n      reader.onload = (event) => {\r\n        try {\r\n          const dump = JSON.parse(event.target.result);\r\n          validateJSON(dump);\r\n          setList((old) => [...old, ...dump]);\r\n        } catch (err) {\r\n          launch(UserError('The given log do not match the format requested'));\r\n        }\r\n      };\r\n      reader.readAsText(uploadedFile, 'utf-8');\r\n    }\r\n  };\r\n\r\n  const downloadImages = async () => {\r\n    const zip = new JSZip();\r\n    for (const { file, url } of imgFiles) {\r\n      const response = await fetch(url);\r\n      const blob = await response.blob();\r\n      zip.file(file, blob);\r\n    }\r\n\r\n    try {\r\n      const result = await zip.generateAsync({ type: 'blob' });\r\n      const url = URL.createObjectURL(result);\r\n      triggerDownload({ name: 'Photos.zip', url });\r\n    } catch (err) {\r\n      launch(UserError(\"Couldn't start image download\"));\r\n    }\r\n  };\r\n\r\n  const isTweetListEmpty = list.length === 0;\r\n  const isImageListEmpty = imgFiles.length === 0;\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {/* Tooltip to manipulate the data */}\r\n        <Grid item xs={12} className={classes.icons}>\r\n          <Tooltip title=\"Import tweet list\">\r\n            <Button onClick={() => triggerUpload(importJSON)}>\r\n              <PublishIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Export tweets\">\r\n            <span>\r\n              <Button onClick={exportJSON} disabled={isTweetListEmpty}>\r\n                <GetAppIcon />\r\n              </Button>\r\n            </span>\r\n          </Tooltip>\r\n          <Tooltip title=\"Download Images\">\r\n            <span>\r\n              <Button onClick={downloadImages} disabled={isImageListEmpty}>\r\n                <PhotoLibraryIcon />\r\n              </Button>\r\n            </span>\r\n          </Tooltip>\r\n          <Tooltip title=\"Clear list\">\r\n            <span>\r\n              <Button onClick={() => setList([])} disabled={isTweetListEmpty}>\r\n                <DeleteIcon />\r\n              </Button>\r\n            </span>\r\n          </Tooltip>\r\n        </Grid>\r\n\r\n        {/* List of th tweets captured by the client */}\r\n        <Grid item xs={12}>\r\n          {list.length > 0 && (\r\n            <List className={classes.listContainer}>\r\n              {list.map((tweet) => (\r\n                <Tweet key={tweet.id} {...tweet} />\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetList;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport animationData from '../assets/TwitterLottie.json';\r\nimport lottie from 'lottie-web';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logo: {\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  logoImg: {\r\n    height: '250px',\r\n    color: '#1da1f2',\r\n  },\r\n  logoTitle: {\r\n    marginLeft: '-20px',\r\n    color: '#1da1f2',\r\n    fontFamily: \"Helvetica\",\r\n  },\r\n}));\r\n\r\nconst WelcomingAnimation = () => {\r\n  const { logo, logoImg, logoTitle } = useStyles();\r\n  // Reference to the container on wich the animation is loaded\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: containerRef.current,\r\n      render: 'svg',\r\n      loop: false,\r\n      autoplay: true,\r\n      animationData,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"logo\" className={logo}>\r\n      <div id=\"logoImg\" className={logoImg} ref={containerRef} />\r\n      <h1 id=\"logoTitle\" className={logoTitle}>\r\n        TWITTER TRACKER\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomingAnimation;\r\n","import React, { useState, useLayoutEffect, useMemo, memo } from 'react';\r\nimport { Slider, makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\n\r\nimport ReactWordcloud from 'react-wordcloud';\r\n\r\nimport { WORDCLOUD_ID } from '../constants';\r\n\r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/themes/material.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  slider: {\r\n    width: '80%',\r\n    marginTop: 40,\r\n    marginLeft: 70,\r\n  },\r\n}));\r\n\r\nconst collapse = (toCollapse) => {\r\n  const collapsed = [];\r\n  toCollapse.split(' ').forEach((item) => {\r\n    const index = collapsed.findIndex((element) => element.text === item);\r\n    if (index !== -1) collapsed[index].value += 1;\r\n    else collapsed.push({ text: item, value: 1 });\r\n  });\r\n  return collapsed.sort((a, b) => b.value - a.value);\r\n};\r\n\r\nconst getWordList = (list) => {\r\n  let listOfWord = '';\r\n  let accumulator = '';\r\n  // Create an agglomerate with all the text from the list\r\n  list.forEach((item) => (accumulator += `${item.text} `));\r\n  accumulator = accumulator.split(' ');\r\n  // Separate every word in the conglomerate and purges links\r\n  accumulator.forEach((word) => {\r\n    if (!word.startsWith('http') || !word.startsWith('@'))\r\n      listOfWord += `${word.toLowerCase()} `;\r\n  });\r\n  return listOfWord;\r\n};\r\n\r\nconst defaultOptions = {\r\n  enableTooltip: true,\r\n  enableOptimizations: true,\r\n  deterministic: false,\r\n  fontFamily: 'Helvetica',\r\n  fontSizes: [15, 70],\r\n  fontStyle: 'normal',\r\n  fontWeight: 'bold',\r\n  rotations: 0,\r\n  transitionDuration: 1000,\r\n  tooltipOptions: { theme: 'material' },\r\n};\r\n\r\nconst getWordTooltip = (word) => `${word.text} (${word.value})`;\r\n\r\nconst WordCloud = ({ list }) => {\r\n  const { slider } = useStyles();\r\n  const [arrayOfWords, setArrayOfWords] = useState([]);\r\n  const [numWords, setNumWords] = useState(20);\r\n  const handleSlider = (_, newValue) => {\r\n    setNumWords(newValue);\r\n  };\r\n\r\n  const isDarkTheme = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const options = useMemo(\r\n    () => ({\r\n      ...defaultOptions,\r\n      colors: isDarkTheme\r\n        ? ['#f6d7de', '#bed2f8', '#f8f8b0', '#77DD77', '#FFCBA5', '#B3EEFF']\r\n        : ['#7AE4FF', '#F5A86C', '#7EE083', '#E07CA5'],\r\n    }),\r\n    [isDarkTheme]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    if (list.length > 0) {\r\n      const wordData = getWordList(list);\r\n      const compressedData = collapse(wordData);\r\n      setArrayOfWords(compressedData.slice(0, 100));\r\n    } else {\r\n      setArrayOfWords([]);\r\n    }\r\n  }, [list]);\r\n\r\n  return (\r\n    <Grid container style={{ width: '100%' }}>\r\n      <Grid item xs={12}>\r\n        <Slider\r\n          color=\"secondary\"\r\n          valueLabelDisplay=\"on\"\r\n          className={slider}\r\n          onChange={handleSlider}\r\n          value={numWords}\r\n          max={100}\r\n          min={1}\r\n          marks={[\r\n            { value: 1, label: 'Sola una parola' },\r\n            { value: 100, label: '100 parole' },\r\n          ]}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div id={WORDCLOUD_ID}>\r\n          <ReactWordcloud\r\n            callbacks={{ getWordTooltip }}\r\n            options={options}\r\n            maxWords={numWords}\r\n            words={arrayOfWords}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default memo(WordCloud);\r\n","import React, { useEffect } from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nimport { WelcomingAnimation, MainContainer } from '.';\r\n\r\nconst ANIMATED = process.env.NODE_ENV === 'production';\r\n\r\nconst Home = () => {\r\n  const IntroAnimation = useSpring({\r\n    from: { opacity: 1 },\r\n    to: { opacity: 0 },\r\n    delay: 3300,\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  const MainAnimation = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    delay: 3700,\r\n    config: { duration: 800 },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (ANIMATED) {\r\n      const timer = setTimeout(() => {\r\n        document.getElementById('logo').style.display = 'none';\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ANIMATED ? (\r\n        <>\r\n          <animated.div style={IntroAnimation}>\r\n            <WelcomingAnimation />\r\n          </animated.div>\r\n          <animated.div style={MainAnimation}>\r\n            <MainContainer />\r\n          </animated.div>\r\n        </>\r\n      ) : (\r\n        <MainContainer />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useMemo } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider, CssBaseline } from '@material-ui/core';\r\n\r\nconst DarkTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: 'Montserrat, Roboto, Helvetica, sans-serif',\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#1DA1F2',\r\n    },\r\n    secondary: {\r\n      main: '#FECCA8',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        html: {\r\n          fontSize: 16,\r\n        },\r\n        body: {\r\n          background: \"#303030\"\r\n        }\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst LightTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: 'Montserrat, Roboto, Helvetica, sans-serif',\r\n  },\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#4287f5',\r\n    },\r\n    secondary: {\r\n      main: '#f5426f',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        html: {\r\n          fontSize: 16,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  \r\n});\r\n\r\nconst ThemeContext = ({ children }) => {\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = useMemo(() => (prefersDarkMode ? DarkTheme : LightTheme), [\r\n    prefersDarkMode,\r\n  ]);\r\n  return <ThemeProvider theme={theme}><CssBaseline/>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport ErrorCatcher from './components/AlertWindow';\r\nimport Home from './components/Home';\r\nimport Auth from './components/Auth';\r\n\r\nimport ThemeProvider from './context/ThemeContext';\r\nimport { UserProvider } from './context/UserContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <UserProvider>\r\n      <ThemeProvider>\r\n        <ErrorCatcher>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/auth\" component={Auth} />\r\n            </Switch>\r\n          </Router>\r\n        </ErrorCatcher>\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}